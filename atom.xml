<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[J2hongming Blog]]></title>
  <link href="http://j2hongming.github.io/atom.xml" rel="self"/>
  <link href="http://j2hongming.github.io/"/>
  <updated>2016-12-17T00:37:03+08:00</updated>
  <id>http://j2hongming.github.io/</id>
  <author>
    <name><![CDATA[HongMing ChangChine]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Interview in 2016]]></title>
    <link href="http://j2hongming.github.io/blog/2016/11/07/interview-in-2016/"/>
    <updated>2016-11-07T21:23:21+08:00</updated>
    <id>http://j2hongming.github.io/blog/2016/11/07/interview-in-2016</id>
    <content type="html"><![CDATA[<ul>
<li>綜合心得，主要描述被問什麼、問什麼、面試前後整體流程和參考資源</li>
</ul>


<!-- more -->


<h1>綜合心得</h1>

<h2>被問什麼</h2>

<ol>
<li>自介</li>
<li>履歷、自傳上寫到的專案經歷</li>
<li>離職原因( 必問 )</li>
<li>職涯發展( 常問 )</li>
<li>上一份工作薪資與調薪狀況( 必問 )</li>
<li>期望新資( 必問 )</li>
<li>最有成就感、值得一提的事( 二面主管喜歡問 )</li>
<li>遇過最挫敗、最困難的事( 二面主管喜歡問 )</li>
</ol>


<p>1, 2準備的說明內容以專案目的、使用情境、架構、工作內容、功能實作和團隊人數的面向去思考面試官最想知道的訊息，主要還是以能夠表達清楚為主，但自己覺得還是需要針對專案內容和論文準備書面資料，因為光憑口頭描述感覺很抽象會讓人無法體會。通常面試官會從1, 2延伸他有興趣的部分繼續問，很有可能是該職缺之後會碰到的東西。</p>

<p>5, 6薪資部分在面試前填寫的資料表就會寫到，所以必問。這部分參考其他學長的建議先回答年薪，被追問再講出薪資結構(月薪幾個月、三節獎金、績效獎金、福利金、其他福利，如健康檢查&hellip;等)，務必先想好一個解釋說法。</p>

<h2>問什麼</h2>

<ul>
<li>這個職缺所需的特質和能力是什麼? 為什麼?</li>
<li>工作流程和軟體開發流程(從需求分析 mockup 設計 開發 測試)</li>
<li>會用到的技術、工具、版控系統、CD/CI、Issue Tracking、KM、Code Quality and Format</li>
<li>當一個問題來了，團隊通常會如何處理</li>
<li>開發和維護的比例大概是多少</li>
<li>公司的組織架構? 貴單位有多少人? 團隊成員的組成為何(經歷)?</li>
<li>電腦是否公司提供?配備?</li>
<li>上下班時間、&#8221;實際&#8221;工時、加班制度和情形</li>
<li>其他福利、休假</li>
</ul>


<p>這部分參考這篇<a href="https://goo.gl/HYnjj3">文章/ By Psyman (狙擊手諸葛)</a></p>

<h2>整體流程</h2>

<ol>
<li>主動投遞 或 被動通知</li>
<li>線上測驗 或 初審資料(optional)</li>
<li>面試意願與日期確認 或 無面試機會</li>
<li>面試(主管、工程師)</li>
<li>二次面試(處長、協理&hellip;更高層級的長官)(optional)</li>
<li>人資面試以及說明薪資結構、福利、假別、上下班時間、是否有其他家已拿到offer(問你的rank)</li>
<li>口頭offer GET</li>
<li>若還有其他疑問和考量點，針對自己的需求詳細確認工作內容與團隊組成(電話, email)(最好是在面試QA就確認完成)</li>
<li>職等與薪資簽核流程</li>
<li>意願、報到日期確認</li>
</ol>


<p>這次主動投遞的有中科院、中華電信、趨勢科技、KKBox。中科院、中華電信和KKBox無面試機會XD，趨勢科技120mins的Codility線上測驗後無聲卡。</p>

<p>意願確認前，8調查資料的部分，這次主要從官網(產品資訊)找出和面談中描述8成像的項目(有可能會失誤，所以還是當面或電話或mail問清楚比較可行)、Linkedin、最近新聞、GlassDoor。</p>

<h2>參考資源</h2>

<ol>
<li><a href="http://www.javatpoint.com/corejava-interview-questions">Core Java Interview Questions</a></li>
<li><a href="https://goo.gl/b5JeKX">Java-Collections-cheat-sheet</a></li>
<li><a href="http://alrightchiu.github.io/%E2%80%A6/mu-lu-yan-suan-fa-yu-zi-liao%E2%80%A6">演算法與資料結構 By Chiu CC</a></li>
<li><a href="https://leetcode.com/">LeetCode</a></li>
<li><a href="http://coolshell.cn/articles/8790.html">程序算法與人生選擇</a></li>
<li><a href="https://goo.gl/X2b7qY">不管你怎麼選擇，都會後悔</a></li>
</ol>


<p>有關面試中Java的問題都可以在1找到</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[認證與授權筆記]]></title>
    <link href="http://j2hongming.github.io/blog/2016/09/09/authentication-versus-authorization-notes/"/>
    <updated>2016-09-09T17:52:49+08:00</updated>
    <id>http://j2hongming.github.io/blog/2016/09/09/authentication-versus-authorization-notes</id>
    <content type="html"><![CDATA[<ul>
<li>認證(Authentication)</li>
<li>授權(Authorization)</li>
</ul>


<!-- more -->


<h2>認證(Authentication)</h2>

<blockquote><p>不要相信任何人!</p></blockquote>

<p>對面走過來一個陌生人，「他是誰?」
對面走過來一個熟人，「是某某某阿」</p>

<p>為什麼會有如此差異呢?仔細想想，我們內建的第一道認證機制或許就是<code>臉孔</code>，透過這張臉我們可以瞬間知道走過來的人是誰。
等等&hellip;若是多胞胎的話呢?
若是這情況，第一道認證機制就會失效，此時就必須透過其他認證機制幫助我們辨識這個人是誰。<code>名牌</code>、<code>名片</code>、<code>身分證</code>、<code>指紋</code>、<code>暗號</code>&hellip;等等。</p>

<p>因此，回答「這個人是誰?」的問題就是<code>認證</code>。
幫助我們回答這問題的方法就是<code>認證機制</code>。</p>

<h3>認證機制</h3>

<h4>Http Basic Authentication</h4>

<p>參與元素：<code>Http Header</code>, <code>Username/Password</code>, <code>base64編碼</code></p>

<p>一定要搭配SSL服用，否則會曝曬在陽光底下。</p>

<h4>Token-base Authentication</h4>

<p>回答以下三個問題</p>

<blockquote><ol>
<li>如何運作</li>
<li>有什麼好處</li>
<li>有什麼壞處</li>
</ol>
</blockquote>

<h4>OAuth</h4>

<h4>Json Web Token(JWT)</h4>

<h2>授權(Authorization)</h2>

<blockquote><p>朕不給﹐你不能搶</p></blockquote>

<p>(未完待續&hellip;)</p>

<h2>參考</h2>

<ul>
<li><a href="http://blog.nsfocus.net/rest-api-design-safety/">REST API安全設計指南</a></li>
<li><a href="https://mengkang.net/625.html">RESTful Api 身份認證中的安全性設計探討</a></li>
<li><a href="http://restcookbook.com/Basics/loggingin/">How do I let users log into my RESTful API</a></li>
<li><a href="https://scotch.io/tutorials/the-ins-and-outs-of-token-based-authentication">The Ins and Outs of Token Based Authentication</a></li>
<li><a href="http://www.slideshare.net/TunYuChang/restful-api-token">淺談RESTful API認證 Token機制使用經驗分享</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[時間複雜度筆記]]></title>
    <link href="http://j2hongming.github.io/blog/2016/08/16/time-complexity/"/>
    <updated>2016-08-16T14:45:57+08:00</updated>
    <id>http://j2hongming.github.io/blog/2016/08/16/time-complexity</id>
    <content type="html"><![CDATA[<p>閱讀完<code>ChiuCC</code>的文章<a href="http://alrightchiu.github.io/SecondRound/complexityasymptotic-notationjian-jin-fu-hao.html">Complexity：Asymptotic Notation(漸進符號)</a>後整理的筆記。</p>

<!-- more -->


<p>時間複雜度(Complexity)旨在描述<code>時間</code>和<code>資料數量</code>的關係。漸進符號(Asymptotic Notation)是用來<code>評估</code>複雜度的工具，感覺上有種分類的味道。</p>

<p>複雜度有三兄弟: Theta, O, Omega。</p>

<p>漸進符號(Asymptotic Notation)本質上是<code>函數集合</code>，這裡的函數指的是f(n)，負責表現該算法的<code>趨勢</code>，並且經由找出趨勢的<code>邊界</code>，這裡的邊界指的是g(n)，來呈現該算法趨勢是屬於哪一類型的趨勢。</p>

<p>複雜度三兄弟中，Theta負責三明治的所有外層吐司；O負責三明治的上層吐司；Omega負責三明治的下層吐司。</p>

<p>上層吐司即為天花板，也就是上界(upper bound)，想得到的資訊為最差的情況需要花<code>多久</code>的時間。下層吐司即為地板，亦即下界(lower bound)，想取得的資訊為<code>至少</code>需花費多少時間。</p>

<h3>其他資料</h3>

<ul>
<li><a href="http://bigocheatsheet.com/">Big-O Algorithm Complexity Cheat Sheet</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Java String 常用操作]]></title>
    <link href="http://j2hongming.github.io/blog/2016/08/10/java-string-basic/"/>
    <updated>2016-08-10T11:53:36+08:00</updated>
    <id>http://j2hongming.github.io/blog/2016/08/10/java-string-basic</id>
    <content type="html"><![CDATA[<ul>
<li>轉換(transform)-魔形女</li>
<li>比較(compare)</li>
<li>子集合(subset)</li>
<li>分割(split)-次元刀</li>
<li>合併(join)</li>
</ul>


<!-- more -->


<h2>轉換(transform)-魔形女</h2>

<h3>Some Data Type -> String</h3>

<p>Integer -> String</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kt">int</span> <span class="n">number</span> <span class="o">=</span> <span class="mi">1234</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// public static String valueOf(int i)</span>
</span><span class='line'><span class="n">String</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">number</span><span class="o">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// public static String toString(int i)</span>
</span><span class='line'><span class="n">Integer</span><span class="o">.</span><span class="na">toString</span><span class="o">(</span><span class="n">number</span><span class="o">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Let JVM do it</span>
</span><span class='line'><span class="s">&quot;&quot;</span> <span class="o">+</span> <span class="n">number</span>
</span></code></pre></td></tr></table></div></figure>


<p>char -> String</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kt">char</span> <span class="n">c</span> <span class="o">=</span> <span class="sc">&#39;0&#39;</span><span class="o">;</span>
</span><span class='line'><span class="n">String</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="kt">char</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>int Array -> String</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kt">int</span><span class="o">[]</span> <span class="n">array</span> <span class="o">=</span> <span class="o">{</span><span class="mi">1</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="mi">3</span><span class="o">,</span><span class="mi">4</span><span class="o">};</span>
</span><span class='line'><span class="n">String</span> <span class="n">strArr</span> <span class="o">=</span> <span class="n">Arrays</span><span class="o">.</span><span class="na">toString</span><span class="o">(</span><span class="n">array</span><span class="o">);</span>
</span><span class='line'><span class="c1">// strArr is &quot;[1, 2, 3, 4]&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>byte Array -> String</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">// bytes is byte[] type</span>
</span><span class='line'><span class="n">String</span> <span class="n">testString</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">String</span><span class="o">(</span><span class="n">bytes</span><span class="o">,</span> <span class="n">StandardCharsets</span><span class="o">.</span><span class="na">UTF_8</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><a href="http://javadevnotes.com/java-integer-to-string-examples">Java Integer To String Examples</a></li>
<li><a href="http://stackoverflow.com/questions/5071040/java-convert-integer-to-string">Java - Convert integer to string</a></li>
<li><a href="http://stackoverflow.com/questions/10904911/how-to-convert-an-int-array-to-string-with-tostring-method-in-java">How to convert an int array to String with toString method in Java</a></li>
<li><a href="http://stackoverflow.com/documentation/java/109/strings/1862/conversion-to-from-bytes#t=201608100618202285977">Conversion to / from bytes</a></li>
<li><a href="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html">Oracle Docs: String</a></li>
</ul>


<h3>String -> Some Data Type</h3>

<p>Some Data Type: int, long, BigInteger, BigDecimal, double, byte[], char[]</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">String</span> <span class="n">number</span> <span class="o">=</span> <span class="s">&quot;1234&quot;</span><span class="o">;</span>
</span><span class='line'><span class="n">String</span> <span class="n">bigDecimal</span> <span class="o">=</span> <span class="s">&quot;1234.5678&quot;</span><span class="o">;</span>
</span><span class='line'><span class="n">String</span> <span class="n">doubleN</span> <span class="o">=</span> <span class="s">&quot;3.14&quot;</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// String to int</span>
</span><span class='line'><span class="kt">int</span> <span class="n">intNum</span> <span class="o">=</span> <span class="n">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">number</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// String to long</span>
</span><span class='line'><span class="kt">long</span> <span class="n">longNum</span> <span class="o">=</span> <span class="n">Long</span><span class="o">.</span><span class="na">parseLong</span><span class="o">(</span><span class="n">number</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// String to BigInteger</span>
</span><span class='line'><span class="n">BigInteger</span> <span class="n">bigIntegerNum</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">BigInteger</span><span class="o">(</span><span class="n">number</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// String to BigDecimal</span>
</span><span class='line'><span class="n">BigDecimal</span> <span class="n">bigDecimalNum</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">BigDecimal</span><span class="o">(</span><span class="n">bigDecimal</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// String to double</span>
</span><span class='line'><span class="kt">double</span> <span class="n">doubleNum</span> <span class="o">=</span> <span class="n">Double</span><span class="o">.</span><span class="na">parseDouble</span><span class="o">(</span><span class="n">doubleN</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Handle the &quot;NumberFormatException&quot;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">// String to byte[]</span>
</span><span class='line'><span class="kt">byte</span><span class="o">[]</span> <span class="n">bytes</span> <span class="o">=</span> <span class="s">&quot;1234&quot;</span><span class="o">.</span><span class="na">getBytes</span><span class="o">(</span><span class="n">StandardCharsets</span><span class="o">.</span><span class="na">UTF_8</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">// String to char[]</span>
</span><span class='line'><span class="n">String</span> <span class="n">s</span> <span class="o">=</span> <span class="s">&quot;1234&quot;</span><span class="o">;</span>
</span><span class='line'><span class="kt">char</span><span class="o">[]</span> <span class="n">charArray</span> <span class="o">=</span> <span class="n">s</span><span class="o">.</span><span class="na">toCharArray</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// if use 3rd party library (Apache commons-lang)</span>
</span><span class='line'><span class="n">Character</span><span class="o">[]</span> <span class="n">charObjectArray</span> <span class="o">=</span> <span class="n">ArrayUtils</span><span class="o">.</span><span class="na">toObject</span><span class="o">(</span><span class="n">charArray</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">// Arrays.asList</span>
</span><span class='line'><span class="n">String</span> <span class="n">pokemon</span> <span class="o">=</span> <span class="s">&quot;Bulbasaur,Charmander,Squirtle,Pikachu&quot;</span><span class="o">;</span>
</span><span class='line'><span class="n">String</span><span class="o">[]</span> <span class="n">pokemons</span> <span class="o">=</span> <span class="n">pokemon</span><span class="o">.</span><span class="na">split</span><span class="o">(</span><span class="s">&quot;,&quot;</span><span class="o">);</span>
</span><span class='line'><span class="n">List</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">pokemonList</span> <span class="o">=</span> <span class="n">Arrays</span><span class="o">.</span><span class="na">asList</span><span class="o">(</span><span class="n">pokemons</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// new ArrayList</span>
</span><span class='line'><span class="n">List</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">pokemonList2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;(</span><span class="n">Arrays</span><span class="o">.</span><span class="na">asList</span><span class="o">(</span><span class="n">pokemons</span><span class="o">));</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><a href="http://stackoverflow.com/documentation/java/109/strings/11480/converting-string-to-other-datatypes#t=201608100618128217497">Converting String to other datatypes.</a></li>
<li><a href="http://stackoverflow.com/documentation/java/109/strings/1862/conversion-to-from-bytes#t=201608100618202285977">Conversion to / from bytes</a></li>
<li><a href="http://stackoverflow.com/documentation/java/109/strings/1837/converting-string-to-character-array#t=201608100619012006559">Converting string to Character Array</a></li>
<li><a href="http://javadevnotes.com/java-split-string-into-arraylist-examples">Java Split String Into ArrayList Examples</a></li>
</ul>


<h2>比較(compare)</h2>

<p><code>equals</code>, <code>equalsIgnoreCase</code>, <code>compareTo</code>, <code>compareToIgnoreCase</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">String</span> <span class="n">str1</span> <span class="o">=</span> <span class="s">&quot;abc&quot;</span><span class="o">;</span>
</span><span class='line'><span class="n">String</span> <span class="n">str2</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">String</span><span class="o">(</span><span class="s">&quot;abc&quot;</span><span class="o">);</span>
</span><span class='line'><span class="n">String</span> <span class="n">str3</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">String</span><span class="o">(</span><span class="s">&quot;aBc&quot;</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// True</span>
</span><span class='line'><span class="n">str1</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">str2</span><span class="o">)</span>
</span><span class='line'><span class="c1">// False</span>
</span><span class='line'><span class="n">str1</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">str3</span><span class="o">)</span>
</span><span class='line'><span class="c1">// False</span>
</span><span class='line'><span class="n">str2</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">str3</span><span class="o">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 0</span>
</span><span class='line'><span class="n">str1</span><span class="o">.</span><span class="na">compareTo</span><span class="o">(</span><span class="n">str2</span><span class="o">)</span>
</span><span class='line'><span class="c1">// 32</span>
</span><span class='line'><span class="n">str2</span><span class="o">.</span><span class="na">compareTo</span><span class="o">(</span><span class="n">str3</span><span class="o">)</span>
</span><span class='line'><span class="c1">// -32</span>
</span><span class='line'><span class="n">str3</span><span class="o">.</span><span class="na">compareTo</span><span class="o">(</span><span class="n">str2</span><span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><a href="http://stackoverflow.com/documentation/java/109/strings/453/comparing-strings#t=201608100648440805948">Comparing Strings</a></li>
</ul>


<h2>子集合(subset)</h2>

<p><code>substring</code>, 使用開始(beginIndex)與結束標記(endIndex)取得不包含結束標記的子字串。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">String</span> <span class="n">str1</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">String</span><span class="o">(</span><span class="s">&quot;0123456789&quot;</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 56789</span>
</span><span class='line'><span class="n">str1</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="mi">5</span><span class="o">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 5678</span>
</span><span class='line'><span class="n">str1</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="mi">5</span><span class="o">,</span> <span class="mi">9</span><span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><a href="http://javadevnotes.com/java-substring-examples">Java Substring Examples</a></li>
<li><a href="http://stackoverflow.com/documentation/java/109/strings/545/substrings#t=201608100717465737842">Stack Overflow: Java String: Substrings</a></li>
</ul>


<h2>分割(split)-次元刀</h2>

<p><code>split</code> 或 <code>StringTokenizer</code>，注意escape character</p>

<p>split</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">// public String[] split(String regex)</span>
</span><span class='line'><span class="n">String</span> <span class="n">pokemon</span> <span class="o">=</span> <span class="s">&quot;Bulbasaur,Charmander,Squirtle,Pikachu&quot;</span><span class="o">;</span>
</span><span class='line'><span class="n">String</span><span class="o">[]</span> <span class="n">pokemons</span> <span class="o">=</span> <span class="n">pokemon</span><span class="o">.</span><span class="na">split</span><span class="o">(</span><span class="s">&quot;,&quot;</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'><span class="n">String</span> <span class="n">pokemonCP</span> <span class="o">=</span> <span class="s">&quot;Bulbasaur235Charmander167Squirtle3310Pikachu9527&quot;</span><span class="o">;</span>
</span><span class='line'><span class="c1">// {&quot;Bulbasaur&quot;,&quot;Charmander&quot;,&quot;Squirtle&quot;,&quot;Pikachu&quot;}</span>
</span><span class='line'><span class="n">String</span><span class="o">[]</span> <span class="n">pokemons</span> <span class="o">=</span> <span class="n">pokemonCP</span><span class="o">.</span><span class="na">split</span><span class="o">(</span><span class="s">&quot;\\d+&quot;</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>StringTokenizer</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">// Default set of characters are empty spaces (\t\n\r\f)</span>
</span><span class='line'><span class="n">String</span> <span class="n">pokemon</span> <span class="o">=</span> <span class="s">&quot;Bulbasaur Charmander Squirtle Pikachu&quot;</span><span class="o">;</span>
</span><span class='line'><span class="n">StringTokenizer</span> <span class="n">tokenizer</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">StringTokenizer</span><span class="o">(</span><span class="n">pokemon</span><span class="o">);</span>
</span><span class='line'><span class="k">while</span> <span class="o">(</span><span class="n">tokenizer</span><span class="o">.</span><span class="na">hasMoreTokens</span><span class="o">())</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">tokenizer</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><a href="http://javadevnotes.com/java-string-split-tutorial-and-examples">Java String Split Tutorial And Examples</a></li>
<li><a href="http://stackoverflow.com/documentation/java/109/strings/3306/splitting-strings-using-split#t=201608100730280433428">Stack Overflow:Splitting Strings using split</a></li>
<li><a href="http://stackoverflow.com/documentation/java/109/strings/6346/splitting-strings-using-stringtokenizer#t=201608100730292621908">Stack Overflow:Splitting Strings using StringTokenizer</a></li>
</ul>


<h2>合併(join)</h2>

<p><code>+</code>,String的<code>concat</code>, StringBuffer或StringBuilder的<code>append</code></p>

<p>延伸議題：<a href="http://stackoverflow.com/questions/1532461/stringbuilder-vs-string-concatenation-in-tostring-in-java">StringBuilder vs String concatenation in toString() in Java</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">String</span> <span class="n">str1</span> <span class="o">=</span> <span class="s">&quot;Pikachu is&quot;</span><span class="o">;</span>
</span><span class='line'><span class="n">String</span> <span class="n">str2</span> <span class="o">=</span> <span class="s">&quot; cute&quot;</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="n">str1</span> <span class="o">=</span> <span class="n">str1</span><span class="o">.</span><span class="na">concat</span><span class="o">(</span><span class="n">str2</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'><span class="n">StringBuilder</span> <span class="n">sb</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">StringBuilder</span><span class="o">();</span>
</span><span class='line'><span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">str1</span><span class="o">);</span>
</span><span class='line'><span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">str2</span><span class="o">);</span>
</span><span class='line'><span class="n">sb</span><span class="o">.</span><span class="na">toString</span><span class="o">();</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[如何設定gitbook側邊欄大綱顯示階層數字]]></title>
    <link href="http://j2hongming.github.io/blog/2016/08/04/gitbook-outline-number/"/>
    <updated>2016-08-04T16:03:23+08:00</updated>
    <id>http://j2hongming.github.io/blog/2016/08/04/gitbook-outline-number</id>
    <content type="html"><![CDATA[<p>開心地開了一本gitbook，然後用線上編輯器做了初版的大綱，正當我準備檢視一下Build好的書長什麼樣子時&hellip;咦?</p>

<p>為什麼大綱左邊沒有出現階層數字，印象中之前看過的gitbook有。第一個想法是會不會我的<code>SUMMARY.md</code>寫法有誤，看了一下官方文件的範例好像也沒有提到關於出現階層數字的寫法&hellip;，只好呼喚Google大神，翻了gitbook教學文似乎也沒有特別提到相關的資料，不死心看看別人的範例，發現<a href="https://www.gitbook.com/explore">Explore Gitbook</a>內的書有些有出現，有些沒有&hellip;</p>

<!-- more -->


<p>花了幾個小時測試和Google，毫無頭緒，正準備放棄的時候突然靈光一閃，想說gitbook最後也是根據某些模板產生相對應的html，既然如此會不會是有特別的模板提供這功能</p>

<p>看了<a href="https://toolchain.gitbook.com/themes/">官方文件</a>發現gitbook 3.0.0之後有提供預設的模板，但在線上編輯器中卻沒看到相關設定，打開線上編輯器的Plugins Store搜尋<code>theme default</code>才發現預設沒被載入與啟用&hellip;，找到<a href="https://plugins.gitbook.com/plugin/theme-default">theme default的說明頁面</a>，看到有個setting是<code>showLevel</code>，恩，就是它了吧!</p>

<p>以下為線上編輯器的設定畫面：</p>

<ol>
<li><p>點選<code>Plugins Store</code>。未設定前，右下方沒有出現<code>book.json</code>
<img src="http://j2hongming.github.io/images/gitbook-snapshot/gitbook-plugin-theme-default-1.png" alt="設定畫面1" /></p></li>
<li><p>搜尋列輸入<code>theme default</code>，找到之後按下+號加入此plugin
<img src="http://j2hongming.github.io/images/gitbook-snapshot/gitbook-plugin-theme-default-2.png" alt="設定畫面2" /></p></li>
<li><p>加入成功會顯示綠色並出現設定按鈕
<img src="http://j2hongming.github.io/images/gitbook-snapshot/gitbook-plugin-theme-default-3.png" alt="設定畫面3" /></p></li>
<li><p>進入theme default設定畫面將<strong>Show level indicator in TOC</strong>開關打開
<img src="http://j2hongming.github.io/images/gitbook-snapshot/gitbook-plugin-theme-default-4.png" alt="設定畫面4" /></p></li>
<li><p>回到編輯主畫面發現右下方出現了book.json，內容是剛剛設定的plugin，這邊要注意的是若沒有客製化的css，不須設定styles這個屬性，直接刪掉即可。
<img src="http://j2hongming.github.io/images/gitbook-snapshot/gitbook-plugin-theme-default-5.png" alt="設定畫面5" /></p></li>
<li><p>要確認plugin是否載入成功，需到最近一次UPDATE的Build頁面確認
<img src="http://j2hongming.github.io/images/gitbook-snapshot/gitbook-plugin-theme-default-6.png" alt="設定畫面6" /></p></li>
</ol>


<p>檢視一下新build出來的書，呼，總算出現階層數字啦!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[資工系課程整理與心得]]></title>
    <link href="http://j2hongming.github.io/blog/2016/08/02/thoughts-about-courses-in-computer-science/"/>
    <updated>2016-08-02T17:57:39+08:00</updated>
    <id>http://j2hongming.github.io/blog/2016/08/02/thoughts-about-courses-in-computer-science</id>
    <content type="html"><![CDATA[<p>畢業幾年後，偶然發現<a href="http://www.nand2tetris.org/">From NAND to Tetris</a>這個線上課程，從前求學時總是東一塊西一塊支離破碎的概念終於可以有一個概觀性的整理。</p>

<ul>
<li>心得</li>
<li>整理</li>
<li>參考</li>
</ul>


<!-- more -->


<h2>心得</h2>

<p>回頭去看，對於資工系科目要求的重點，有些小小的感想如下：</p>

<blockquote><p>邏輯脈絡、對技術的熱情、對本質追根究柢的精神且要能夠應用出來、設計和解決問題的想法</p></blockquote>

<p>自己在求學階段碰到實作的問題時，大部分會覺得很困難無法輕易解決，總是想逃避而不去找出問題的本質(用已知的理論去推演)</p>

<p>總之，要在這領域有所成長，我覺得必須掌握以下的概念：</p>

<ul>
<li>觀察</li>
<li>和實際生活做關聯</li>
<li>原理</li>
<li>抽象化能力(實例轉換到抽象程式語言)</li>
<li>邏輯能力(資料結構和演算法理解的過程而非結果)(精神)</li>
<li>大腦記憶和大腦Compiler</li>
</ul>


<h2>整理</h2>

<ul>
<li>From NAND to Tetris中Abstract Design的觀點</li>
<li>以計算機為單位</li>
</ul>


<h3>From NAND to Tetris中Abstract Design的觀點</h3>

<blockquote><p>[現實世界問題] > <strong>抽象化方法</strong> > [抽象化模型] > <strong>用計算機觀點模擬現實世界的問題</strong> > [計算機可運作的程式]</p></blockquote>

<h4>抽象化方法</h4>

<ul>
<li>系統分析與設計(UML)</li>
<li>資料庫系統(ER-Model)</li>
<li>資料挖掘</li>
<li>社群網路與運算</li>
</ul>


<h4>用計算機觀點模擬現實世界的問題</h4>

<ul>
<li>物件導向設計(SOLID, Design Pattern)</li>
<li>資料庫系統(CRUD, DDL, DML)</li>
<li>資料結構</li>
<li>演算法</li>
</ul>


<h3>以計算機為單位</h3>

<h4>計算機本身</h4>

<ul>
<li>電子電路學, 電子電路技術</li>
<li>數位邏輯, 數位系統, 數位系統技術, 微算機技術&copy;</li>
<li>計算機組織, 計算機結構, 系統程式, 作業系統, Unix系統程式設計&copy;</li>
<li>程式設計&copy;, 計算機技術&copy;, 物件導向程式設計(C++), JAVA程式設計, 網際網路資料庫程式設計(PHP)</li>
</ul>


<h4>連接現實世界和計算機的橋樑</h4>

<blockquote><p>現實世界問題抽象化後的模型轉變為計算機可理解的組成元素，意即用計算機觀點模擬現實世界的問題</p></blockquote>

<ul>
<li>資料結構</li>
<li>演算法</li>
</ul>


<h4>應用計算機解決問題</h4>

<ul>
<li>系統分析與設計</li>
<li>資料庫系統</li>
<li>資料挖掘</li>
<li>雲端運算導論</li>
<li>社群網路與運算</li>
<li>普及計算</li>
</ul>


<h4>把計算機組成一個軍團</h4>

<ul>
<li>網路概論, 計算機網路</li>
<li>網路程式設計(JAVA)</li>
<li>網路模擬與測試</li>
<li>網路管理</li>
<li>網路安全</li>
<li>分散式系統</li>
<li>雲端資料網路</li>
</ul>


<h4>計算機數學理論</h4>

<ul>
<li>線性代數</li>
<li>離散數學</li>
<li>機率論</li>
<li>計算幾何</li>
</ul>


<h2>參考</h2>

<ul>
<li><a href="http://goo.gl/dg2Mpk">碼農在工作中的必備能力</a></li>
<li><a href="http://blog.ericsk.org/archives/1308">「資訊系究竟在學什麼？」</a></li>
<li><a href="http://www.slideshare.net/ccckmit/nand2tetris">用十分鐘向nand2tetris學會設計處理器</a></li>
<li><a href="http://www.slideshare.net/ccckmit/jserv">用十分鐘 向jserv學習作業系統設計</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Windows Batch File Notes]]></title>
    <link href="http://j2hongming.github.io/blog/2016/07/28/windows-batch-file-notes/"/>
    <updated>2016-07-28T16:34:39+08:00</updated>
    <id>http://j2hongming.github.io/blog/2016/07/28/windows-batch-file-notes</id>
    <content type="html"><![CDATA[<ul>
<li>變數</li>
<li>if</li>
<li>導向</li>
<li>常用範例</li>
<li>參考資料</li>
</ul>


<!-- more -->


<h2>變數</h2>

<h3>系統變數</h3>

<pre><code>:: 觀察作業系統環境變數
set
:: 將作業系統環境變數輸出至variables.txt
set &gt; variables.txt
</code></pre>

<h3>設定變數</h3>

<h4>基本設定</h4>

<pre><code>set LogName=myLog.txt
</code></pre>

<p>注意事項如下：</p>

<ol>
<li>注意空白</li>
<li>case insensitive</li>
</ol>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bat'><span class='line'><span class="p">@</span><span class="k">ECHO</span> <span class="k">off</span>
</span><span class='line'><span class="k">SET</span> <span class="nv">spaceExam</span><span class="o">=</span>  beginText
</span><span class='line'><span class="k">SET</span> <span class="nv">aBc</span><span class="o">=</span>Hello
</span><span class='line'><span class="k">SET</span> <span class="nv">Abc</span><span class="o">=</span>World
</span><span class='line'><span class="k">ECHO</span> <span class="nv">%spaceExam%</span>
</span><span class='line'><span class="k">ECHO</span> <span class="nv">%aBc%</span>
</span><span class='line'><span class="k">PAUSE</span>
</span></code></pre></td></tr></table></div></figure>


<h4>輸入提示</h4>

<p>加上<code>/p</code></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bat'><span class='line'><span class="p">@</span><span class="k">ECHO</span> <span class="k">off</span>
</span><span class='line'><span class="k">SET</span> <span class="n">/p</span> LogName<span class="o">=</span>請輸入Log檔案名稱
</span><span class='line'><span class="k">ECHO</span> Hello World &gt;<span class="nv">%LogName%</span>
</span><span class='line'><span class="k">PAUSE</span>
</span></code></pre></td></tr></table></div></figure>


<h4>運算式</h4>

<p>加上<code>/a</code></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bat'><span class='line'><span class="p">@</span><span class="k">ECHO</span> <span class="k">off</span>
</span><span class='line'><span class="k">SET</span> <span class="n">/p</span> num<span class="o">=</span>Input Number
</span><span class='line'><span class="k">SET</span> <span class="n">/p</span> price<span class="o">=</span>Input Price
</span><span class='line'><span class="k">SET</span> <span class="n">/a</span> sum<span class="o">=</span><span class="nv">%num%</span> * <span class="nv">%price%</span>
</span><span class='line'><span class="k">ECHO</span> Sum<span class="o">=</span><span class="nv">%sum%</span>
</span><span class='line'><span class="k">PAUSE</span>
</span></code></pre></td></tr></table></div></figure>


<h3>取得變數</h3>

<p>前後加上%</p>

<pre><code>ECHO %LogName%
</code></pre>

<h3>常用變數</h3>

<pre><code>%CD% :當前工作目錄
%DATE% :目前系統日期
%TIME% :目前系統時間
%SystemDrive% :系統碟
%ProgramFiles% :應用程式目錄
%ProgramFiles(x86)% :應用程式目錄(x86)
</code></pre>

<h2>if</h2>

<p>直接參考 <code>if/?</code>說明</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
</pre></td><td class='code'><pre><code class='bat'><span class='line'>在批次檔中執行條件處理。
</span><span class='line'>
</span><span class='line'><span class="k">IF</span> [NOT] <span class="k">ERRORLEVEL</span> number command
</span><span class='line'><span class="k">IF</span> [NOT] string<span class="m">1</span><span class="o">==</span>string<span class="m">2</span> command
</span><span class='line'><span class="k">IF</span> [NOT] <span class="k">EXIST</span> filename command
</span><span class='line'>
</span><span class='line'>  NOT               表示 Windows 應該只有在條件為偽時才執行命令。
</span><span class='line'>
</span><span class='line'>  <span class="k">ERRORLEVEL</span> number 當上一個執行的程式傳回的結束代碼大於或等於指定
</span><span class='line'>                    數字時，則條件為真。
</span><span class='line'>
</span><span class='line'>  string<span class="m">1</span><span class="o">==</span>string<span class="m">2</span>  當指定的文字字串相符合時，則條件為真。
</span><span class='line'>
</span><span class='line'>  <span class="k">EXIST</span> filename    如果指定的檔名存在時，則條件為真。
</span><span class='line'>
</span><span class='line'>  command           指定當條件為真時所要執行的命令。命令之後可以
</span><span class='line'>                    接著 <span class="k">ELSE</span> 命令。當指定條件為偽時，緊接在 <span class="k">ELSE</span>
</span><span class='line'>                    命令之後的命令將會被執行。
</span><span class='line'>
</span><span class='line'><span class="k">ELSE</span> 子句必須出現在 <span class="k">IF</span> 之後的同一行。例如:
</span><span class='line'>
</span><span class='line'>    <span class="k">IF</span> <span class="k">EXIST</span> filename. (
</span><span class='line'>        <span class="k">del</span> filename.
</span><span class='line'>    ) <span class="k">ELSE</span> (
</span><span class='line'>        <span class="k">echo</span> filename. missing.
</span><span class='line'>    )
</span><span class='line'>
</span><span class='line'>以下命令無法作用，因為 <span class="k">del</span> 命令必須以換行字元來結尾:
</span><span class='line'>
</span><span class='line'>    <span class="k">IF</span> <span class="k">EXIST</span> filename. <span class="k">del</span> filename. <span class="k">ELSE</span> <span class="k">echo</span> filename. missing
</span><span class='line'>
</span><span class='line'>下面命令也無法作用，因為 <span class="k">ELSE</span> 命令必須在與 <span class="k">IF</span> 命令同一行的結尾:
</span><span class='line'>
</span><span class='line'>    <span class="k">IF</span> <span class="k">EXIST</span> filename. <span class="k">del</span> filename.
</span><span class='line'>    <span class="k">ELSE</span> <span class="k">echo</span> filename. missing
</span><span class='line'>
</span><span class='line'>下面命令只有在寫成一行時才能作用:
</span><span class='line'>
</span><span class='line'>    <span class="k">IF</span> <span class="k">EXIST</span> filename. (<span class="k">del</span> filename.) <span class="k">ELSE</span> <span class="k">echo</span> filename. missing
</span><span class='line'>
</span><span class='line'>(more)...
</span></code></pre></td></tr></table></div></figure>


<p>範例：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bat'><span class='line'><span class="p">@</span><span class="k">ECHO</span> <span class="k">off</span>
</span><span class='line'><span class="k">IF</span> NOT <span class="k">EXIST</span> testFolder (
</span><span class='line'>     mkdir testFolder
</span><span class='line'>) <span class="k">ELSE</span> (
</span><span class='line'>     <span class="k">ECHO</span> testFolder has been <span class="k">exist</span>
</span><span class='line'>)
</span><span class='line'><span class="k">PAUSE</span>
</span></code></pre></td></tr></table></div></figure>


<h2>導向</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bat'><span class='line'>Standard Output 代號 <span class="m">1</span>
</span><span class='line'>Standard Error  代號 <span class="m">2</span>
</span><span class='line'><span class="k">Do</span> Nothing      代號 NUL
</span><span class='line'>Console
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bat'><span class='line'><span class="p">&gt;</span> <span class="n">NUL</span> :將Standard Output導向null
</span><span class='line'><span class="m">2</span> <span class="p">&gt;</span> <span class="n">NUL</span> :將Standard Error導向null
</span><span class='line'><span class="p">&gt;</span> <span class="n">NUL</span> <span class="m">2</span>&gt;&amp;<span class="m">1</span> :同時將Standard Output和Standard Error導向null
</span><span class='line'><span class="p">&gt;</span> <span class="n">log</span>.txt <span class="m">2</span>&gt;&amp;<span class="m">1</span> :同時將Standard Output和Standard Error導向File(log.txt)
</span><span class='line'><span class="p">&gt;</span> <span class="n">log_stdout</span>.txt <span class="m">2</span><span class="p">&gt;</span><span class="n">log_stderr</span>.txt :將Standard Output導向至log_stdout.txt以及將Standard Error導向至log_stderr.txt
</span></code></pre></td></tr></table></div></figure>


<h2>常用範例</h2>

<h3>判斷指令是否存在</h3>

<p><a href="http://superuser.com/questions/175466/determine-if-command-is-recognized-in-a-batch-file">Determine if command is recognized in a batch file</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bat'><span class='line'><span class="p">@</span><span class="k">ECHO</span> <span class="k">off</span>
</span><span class='line'>WHERE mycommand <span class="m">2</span><span class="p">&gt;</span><span class="n">NUL</span>
</span><span class='line'><span class="k">IF</span> <span class="nv">%ERRORLEVEL%</span> <span class="o">NEQ</span> <span class="m">0</span> (
</span><span class='line'>     <span class="k">ECHO</span> mycommand wasn&#39;t found
</span><span class='line'>)  <span class="k">ELSE</span> (
</span><span class='line'>     <span class="k">ECHO</span> mycommand found
</span><span class='line'>)
</span><span class='line'><span class="k">PAUSE</span>
</span></code></pre></td></tr></table></div></figure>


<h3>判斷檔案是否存在</h3>

<p>檢查7z.exe是否存在</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='bat'><span class='line'><span class="p">@</span><span class="k">ECHO</span> <span class="k">off</span>
</span><span class='line'><span class="k">SET</span> <span class="nv">filepath</span><span class="o">=</span><span class="nv">%ProgramFiles%</span>\<span class="m">7</span>-Zip\
</span><span class='line'><span class="k">SET</span> <span class="nv">filename</span><span class="o">=</span><span class="m">7</span>z.exe
</span><span class='line'>
</span><span class='line'><span class="k">cd</span> <span class="nv">%filepath%</span>
</span><span class='line'><span class="k">IF</span> <span class="k">EXIST</span> <span class="nv">%filename%</span> (
</span><span class='line'>  <span class="k">ECHO</span> <span class="nv">%filename%</span>  found
</span><span class='line'>  <span class="k">ECHO</span> <span class="nv">%CD%</span>
</span><span class='line'>)  <span class="k">ELSE</span> (
</span><span class='line'>    <span class="k">ECHO</span> <span class="nv">%filename%</span> wasn&#39;t found
</span><span class='line'>)
</span><span class='line'>
</span><span class='line'><span class="c">:: BAT File所在位置 %~dp0</span>
</span><span class='line'><span class="k">cd</span> <span class="nv">%~dp0</span>
</span><span class='line'><span class="k">ECHO</span> <span class="nv">%CD%</span>
</span><span class='line'><span class="k">PAUSE</span>
</span></code></pre></td></tr></table></div></figure>


<h3>日期與時間變數</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='bat'><span class='line'><span class="c">::民國年</span>
</span><span class='line'><span class="k">set</span> <span class="n">/a</span> year<span class="o">=</span><span class="nv">%date:~</span><span class="p">,</span><span class="m">4</span>%<span class="m">-1911</span>
</span><span class='line'><span class="c">::西元年</span>
</span><span class='line'><span class="k">set</span> <span class="nv">year</span><span class="o">=</span><span class="nv">%date:~</span><span class="p">,</span><span class="m">4</span>%
</span><span class='line'><span class="c">::月</span>
</span><span class='line'><span class="k">set</span> <span class="nv">month</span><span class="o">=</span><span class="nv">%date:~5</span><span class="p">,</span><span class="m">2</span>%
</span><span class='line'><span class="c">::日</span>
</span><span class='line'><span class="k">set</span> <span class="nv">day</span><span class="o">=</span><span class="nv">%date:~8</span><span class="p">,</span><span class="m">2</span>%
</span><span class='line'><span class="c">::今天日期</span>
</span><span class='line'><span class="k">set</span> <span class="nv">Today</span><span class="o">=</span><span class="nv">%year%%month%%day%</span>
</span><span class='line'><span class="c">::時間</span>
</span><span class='line'><span class="k">set</span> <span class="nv">NowTimeTmp</span><span class="o">=</span><span class="nv">%time::</span><span class="o">=</span>%
</span><span class='line'><span class="k">set</span> <span class="nv">NowTime</span><span class="o">=</span><span class="nv">%NowTimeTmp:~0</span><span class="p">,</span><span class="m">6</span>%
</span></code></pre></td></tr></table></div></figure>


<h2>參考資料</h2>

<ul>
<li><a href="https://www.gitbook.com/book/peterju/cmddoc/details">批次檔的精要學習手冊</a></li>
<li><a href="http://www.tinysoftwares.in/BatchFileTutorial/Index">Batch File Basic Tutorial</a></li>
<li><a href="http://www.robvanderwoude.com/battech_redirection.php">Display &amp; Redirect Output</a></li>
<li><a href="http://forum.twbts.com/viewthread.php?tid=10152">批次檔BAT中應用Windows的36個環境變數</a></li>
<li><a href="http://inpega.blogspot.tw/2012/07/cd-dp0.html">%CD% 與 %~dp0</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[關聯式資料庫筆記]]></title>
    <link href="http://j2hongming.github.io/blog/2016/07/20/relational-database-notes/"/>
    <updated>2016-07-20T23:37:18+08:00</updated>
    <id>http://j2hongming.github.io/blog/2016/07/20/relational-database-notes</id>
    <content type="html"><![CDATA[<p>真實世界中存在各種<code>實體</code>(Entity)，實體與實體間存在某些<code>關係</code>(Relation)。
歌手和專輯、歌曲和歌詞、皮卡丘和訓練師小智&hellip;實體無所不在。
歌手出版了多張專輯，一張專輯內有多首歌曲，一首歌擁有一組歌詞，皮卡丘的訓練師是小智&hellip;實體之間總是有某種關係。</p>

<!-- more -->


<p>如何以資料的概念呈現實體與儲存實體?</p>

<p>利用<code>屬性</code>來描述與呈現實體的某些特性，如：專輯的名稱、簡介、出版日期和封面圖片&hellip;等。歌曲的曲名、長度、性質&hellip;等</p>

<p>其中某些屬性存在一些特別的性質，稱為<code>鍵值</code>(Key)。鍵值可分為幾種：<code>超鍵</code>、<code>候選鍵</code>、<code>主鍵</code>、<code>複合鍵</code>、<code>外來鍵</code>。</p>

<p>此外，關係的呈現方式也分為三種：<code>一對一</code>、<code>一對多</code>和<code>多對多</code></p>

<p>為了保持資料的一致性和完整性，避免異動資料時發生異常現象，訂下了三種<code>完整性規則</code>(Integrity Rules):實體完整性、參考完整性和值域完整性。</p>

<p>稍微整理一下，主要的概念有：</p>

<ul>
<li>鍵值屬性</li>
<li>關係的種類</li>
<li>完整性規則</li>
</ul>


<p>鍵值屬性可分為</p>

<ul>
<li>超鍵(Super key)</li>
<li>候選鍵(Candidate key)</li>
<li>主鍵(Primary key)</li>
<li>複合鍵(Composite key)</li>
<li>外來鍵(Foreign key)</li>
</ul>


<p>關係種類可分為</p>

<ul>
<li>一對一關係(one-to-one)</li>
<li>一對多關係(one-to-many)</li>
<li>多對多關係(many-to-many)</li>
</ul>


<p>完整性規則可分為</p>

<ul>
<li>實體完整性規則(Entity Integrity Rule)</li>
<li>參考完整性規則(Referential Integrity Rule)</li>
<li>值域完整性規則(Domain Integrity Rule)</li>
</ul>


<h2>鍵值屬性</h2>

<p>在計算機的世界裡，要如何判斷實體之間的差異呢?這輛車和那輛車指的是同一台車還是不同的車呢?</p>

<p>這時必須使用一種屬性來明確地告訴計算機：「阿!這輛車和那輛車真的不是同一輛!」。</p>

<p>使用車輛廠牌如何? Toyata, Ford, Mitsubishi&hellip;這看起來不太可行，因為一家車廠生產超過一輛車，假設A車和B車廠牌都是Toyato，計算機會準備掐死你&hellip;</p>

<p>使用車輛廠牌加上車輛型號再加上車牌號碼可行嗎? 看起來似乎可行，A車是Toyato的yaris，車牌號碼是ABC-1234;B車是Mazda的CX-5，車牌號碼是EFG-5678。「阿!A車和B車真的不是同一輛!」</p>

<p>等等&hellip;屬性太多太難記憶，直接使用車牌號碼OK嗎? A車車牌號碼是ABC-1234，B車是EFG-5678，「阿!A車和B車真的不是同一輛!」，計算機覺得開心。</p>

<p>符合唯一性的屬性組合，這概念即為超鍵。(車輛廠牌, 車輛型號,車牌號碼)是超鍵集合中的一個元素。</p>

<p>幫忙超鍵瘦身，移除屬性組合中的某些屬性後還是有唯一性，這概念即為候選鍵。(車牌號碼)是候選鍵。</p>

<p>「就決定是你了!皮卡丘」，被選到的候選鍵有了另一個名字：主鍵。負責代表這個實體，有著遠大的抱負和責任，絕對<code>不可以重複</code>也<code>不可以為空</code>(Null)，壓力山大啊!</p>

<h2>關係種類</h2>

<p>同一款引擎可以安裝在多台車上，一台車同時間只能安裝一款引擎。引擎實體和車實體為一對多關係。</p>

<p>(未完)</p>

<h2>參考資料</h2>

<ul>
<li><a href="http://www.books.com.tw/products/0010720461">圖解資料庫系統理論：使用MySQL實作 / 黃春雄</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Inno Setup With Wine in Linux]]></title>
    <link href="http://j2hongming.github.io/blog/2016/07/20/inno-setup-with-wine-in-linux/"/>
    <updated>2016-07-20T17:16:45+08:00</updated>
    <id>http://j2hongming.github.io/blog/2016/07/20/inno-setup-with-wine-in-linux</id>
    <content type="html"><![CDATA[<ul>
<li>安裝紅酒(wine)</li>
<li>測試紅酒(wine)</li>
<li>安裝Inno Setup</li>
<li>執行exe, cmd</li>
<li>參考資源</li>
</ul>


<!-- more -->


<h2>安裝紅酒(wine)</h2>

<h3>Ubuntu 14.04</h3>

<pre><code>sudo apt-get install wine
</code></pre>

<h3>Cent OS 6.5</h3>

<pre><code>yum install epel-release
yum install wine
</code></pre>

<p>目前CentOS使用手動make尚未成功</p>

<h2>測試紅酒(wine)</h2>

<pre><code>wine --version
# 下載putty.exe測試
wine putty.exe
</code></pre>

<h2>安裝Inno Setup</h2>

<p>下載<a href="http://www.jrsoftware.org/isdl.php">Inno Setup QuickStart Pack</a></p>

<pre><code>wget http://www.jrsoftware.org/download.php/ispack.exe
wine ispack.exe
</code></pre>

<p>安裝完成後Inno Setup會出現在~/.wine/drive_c/Program Files (x86)/Inno Setup 5
<a href="http://unix.stackexchange.com/questions/40492/change-directory-with-space-followed-by">cd到Program Files (x86)的方式</a></p>

<h2>執行exe, cmd</h2>

<p>下載大神做好的<a href="https://gist.githubusercontent.com/derekstavis/8288379/raw/f8f1f7ef290d4116cc30ec341e6b8e996cf8e602/iscc">iscc</a>放在可執行的目錄或是自己加到$PATH</p>

<pre><code>echo $PATH
# 自己加到$PATH,關掉Terminal後就會失效，下一次需要重新加入
export PATH=$PATH:~/bin/my
# 測試iscc
iscc myScript.iss
</code></pre>

<h2>參考資源</h2>

<ul>
<li><a href="http://tecadmin.net/steps-install-wine-centos-rhel-fedora-systems/">How To Install Wine 1.9.9 (Development Release) on CentOS, RHEL &amp; Fedora</a></li>
<li><a href="https://www.youtube.com/watch?v=Ds3Y9thewNQ">How to Install &amp; Configure Wine 1.7.34 on RHEL/CentOS 6/7 and Fedora 23/22/21 - Desktop</a></li>
<li><a href="http://derek.nodeconf.org/posts/creating-a-installer-using-inno-setup-on-linux-and-mac-os-x/">CREATING A INSTALLER USING INNO SETUP ON LINUX AND MAC OS X</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[客製化Drupal原生下拉式選單]]></title>
    <link href="http://j2hongming.github.io/blog/2016/06/16/customize-drupal-origin-selectlist/"/>
    <updated>2016-06-16T23:20:31+08:00</updated>
    <id>http://j2hongming.github.io/blog/2016/06/16/customize-drupal-origin-selectlist</id>
    <content type="html"><![CDATA[<div><script src='https://gist.github.com/f4fe361e7f0c3f83e796b006b8f4cbeb.js'></script>
<noscript><pre><code>/**
 * origin selectlist display:
 * A
 * B
 * C
 * -----
 * customized selectlist display:
 * 100 A
 * 200 B
 * 300 C
 */
function hook_field_widget_form_alter(&amp;$element, &amp;$form_state, $context){

  if($element['#bundle'] == 'article' &amp;&amp; $element['#field_name'] == 'field_code_name'){
    $new_code_name = array();
    foreach ($element['#options'] as $key =&gt; $value) {
      $term_obj = taxonomy_term_load($key);
      $new_code_name[$key] = $term_obj-&gt;field_code_id['und'][0]['safe_value'].' '.$value;
    }
    
    $element['#options'] = $new_code_name;
  }
}</code></pre></noscript></div>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[No Access-Control-Allow-Origin Header Is Present on the Requested Resource]]></title>
    <link href="http://j2hongming.github.io/blog/2016/04/28/no-access-control-allow-origin-header-is-present-on-the-requested-resource/"/>
    <updated>2016-04-28T11:25:22+08:00</updated>
    <id>http://j2hongming.github.io/blog/2016/04/28/no-access-control-allow-origin-header-is-present-on-the-requested-resource</id>
    <content type="html"><![CDATA[<ul>
<li>問題描述</li>
<li>本質</li>
<li>解法</li>
</ul>


<!-- more -->


<h2>問題描述</h2>

<p>使用jQuery AJAX發出Request時，console出現No &lsquo;Access-Control-Allow-Origin&rsquo; header is present on the requested resource</p>

<figure class='code'><figcaption><span>CORS.js</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="o">&lt;</span><span class="nx">script</span> <span class="nx">src</span><span class="o">=</span><span class="s2">&quot;https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js&quot;</span><span class="o">&gt;&lt;</span><span class="err">/script&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="nx">script</span> <span class="nx">type</span><span class="o">=</span><span class="s2">&quot;text/javascript&quot;</span><span class="o">&gt;</span>
</span><span class='line'><span class="c1">// ERROR, and show error message in console </span>
</span><span class='line'><span class="kd">var</span> <span class="nx">url</span> <span class="o">=</span> <span class="s2">&quot;http://data.tycg.gov.tw/api/v1/rest/datastore/a1b4714b-3b75-4ff8-a8f2-cc377e4eaa0f?format=json&quot;</span><span class="p">;</span>
</span><span class='line'><span class="c1">// SUCCESS</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">url</span> <span class="o">=</span> <span class="s1">&#39;http://ptx.transportdata.tw/MOTC/v1/Bus/EstimatedTimeOfArrival/Thb?%24format=json&amp;$top=10&#39;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="nx">$</span><span class="p">.</span><span class="nx">ajax</span><span class="p">({</span>
</span><span class='line'>   <span class="nx">url</span><span class="o">:</span> <span class="nx">url</span><span class="p">,</span>
</span><span class='line'>   <span class="nx">type</span><span class="o">:</span> <span class="s2">&quot;GET&quot;</span><span class="p">,</span>
</span><span class='line'>   <span class="nx">dataType</span><span class="o">:</span> <span class="s2">&quot;JSON&quot;</span><span class="p">,</span>
</span><span class='line'>   <span class="nx">success</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">data</span><span class="p">,</span> <span class="nx">textStatus</span><span class="p">,</span> <span class="nx">request</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>     <span class="nx">alert</span><span class="p">(</span><span class="s2">&quot;SUCCESS!!!&quot;</span><span class="p">);</span>
</span><span class='line'>     <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">data</span><span class="p">);</span>
</span><span class='line'>   <span class="p">},</span>
</span><span class='line'>   <span class="nx">error</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>     <span class="nx">alert</span><span class="p">(</span><span class="s2">&quot;ERROR!!!&quot;</span><span class="p">);</span>
</span><span class='line'>   <span class="p">}</span>
</span><span class='line'> <span class="p">});</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="err">/script&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<div><script src='https://gist.github.com/89c858fdf4fd510fd910787a64eb9f04.js?file=CORS.js'></script>
<noscript><pre><code>&lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js&quot;&gt;&lt;/script&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
// ERROR, and show error message in console 
var url = &quot;http://data.tycg.gov.tw/api/v1/rest/datastore/a1b4714b-3b75-4ff8-a8f2-cc377e4eaa0f?format=json&quot;;
// SUCCESS
var url = 'http://ptx.transportdata.tw/MOTC/v1/Bus/EstimatedTimeOfArrival/Thb?%24format=json&amp;$top=10';

$.ajax({
   url: url,
   type: &quot;GET&quot;,
   dataType: &quot;JSON&quot;,
   success: function(data, textStatus, request) {
     alert(&quot;SUCCESS!!!&quot;);
     console.log(data);
   },
   error: function() {
     alert(&quot;ERROR!!!&quot;);
   }
 });

&lt;/script&gt;</code></pre></noscript></div>


<h2>本質</h2>

<p>基於同源策略(Same-origin policy)所形成的議題
根據MDN所描述，同源的定義必須<code>protocol</code>, <code>host</code>, <code>port</code>相同
所以若要取得不同網域的資源會受到限制。</p>

<h2>解法</h2>

<p>HTTP response header加上<code>Access-Control-Allow-Origin</code>屬性，若有機會碰到Server端的前提下。</p>

<p>使用JSONP溝通，Client端和Server端都要支援。</p>

<p>JQuery降版到1.4，只能動到Client端，Server端是別人家的。</p>

<h2>Ref.</h2>

<ul>
<li><a href="http://stackoverflow.com/questions/20035101/no-access-control-allow-origin-header-is-present-on-the-requested-resource">No &lsquo;Access-Control-Allow-Origin&rsquo; header is present on the requested resource</a></li>
<li><a href="https://developer.mozilla.org/zh-TW/docs/HTTP/Access_control_CORS">HTTP access control (CORS):MDN</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy">Same-origin policy</a></li>
<li><a href="http://ithelp.ithome.com.tw/question/10094915?tab=opinion">Cross Domain Ajax 跨網域抓取資料(JSONP)</a></li>
<li><a href="http://stackoverflow.com/questions/10507345/ajax-and-jsonp-parseerror-and-uncaught-syntaxerror-unexpected-token">$.ajax and JSONP. ParseError and Uncaught SyntaxError: Unexpected token :</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Get Field Names of Content Type in Drupal]]></title>
    <link href="http://j2hongming.github.io/blog/2016/03/31/get-field-names-of-content-type-in-drupal/"/>
    <updated>2016-03-31T13:30:28+08:00</updated>
    <id>http://j2hongming.github.io/blog/2016/03/31/get-field-names-of-content-type-in-drupal</id>
    <content type="html"><![CDATA[<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="sd">/**</span>
</span><span class='line'><span class="sd">* 取得ContentType的field name</span>
</span><span class='line'><span class="sd">* @see </span>
</span><span class='line'><span class="sd">* @link http://drupal.stackexchange.com/questions/39850/get-all-fields-for-a-given-content-type-including-title</span>
</span><span class='line'><span class="sd">*/</span>
</span><span class='line'>
</span><span class='line'><span class="k">function</span> <span class="nf">modulename_get_field_name</span><span class="p">(</span><span class="nv">$content_type</span><span class="p">){</span>
</span><span class='line'>
</span><span class='line'>            <span class="nv">$fields</span> <span class="o">=</span> <span class="k">array</span><span class="p">();</span>
</span><span class='line'>            <span class="nv">$field_map</span> <span class="o">=</span> <span class="nx">field_info_field_map</span><span class="p">();</span>
</span><span class='line'>            <span class="nv">$instances</span> <span class="o">=</span> <span class="nx">field_info_instances</span><span class="p">(</span><span class="s1">&#39;node&#39;</span><span class="p">,</span> <span class="nv">$content_type</span><span class="p">);</span>
</span><span class='line'>            <span class="nv">$extra_fields</span> <span class="o">=</span> <span class="nx">field_info_extra_fields</span><span class="p">(</span><span class="s1">&#39;node&#39;</span><span class="p">,</span> <span class="nv">$content_type</span><span class="p">,</span> <span class="s1">&#39;form&#39;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>            <span class="c1">// Fields.</span>
</span><span class='line'>            <span class="k">foreach</span> <span class="p">(</span><span class="nv">$instances</span> <span class="k">as</span> <span class="nv">$name</span> <span class="o">=&gt;</span> <span class="nv">$instance</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>              <span class="nv">$field</span> <span class="o">=</span> <span class="nx">field_info_field</span><span class="p">(</span><span class="nv">$instance</span><span class="p">[</span><span class="s1">&#39;field_name&#39;</span><span class="p">]);</span>
</span><span class='line'>              <span class="nv">$fields</span><span class="p">[</span><span class="nv">$instance</span><span class="p">[</span><span class="s1">&#39;field_name&#39;</span><span class="p">]]</span> <span class="o">=</span> <span class="k">array</span><span class="p">(</span>
</span><span class='line'>                <span class="s1">&#39;field_name&#39;</span> <span class="o">=&gt;</span> <span class="nv">$instance</span><span class="p">[</span><span class="s1">&#39;field_name&#39;</span><span class="p">],</span>
</span><span class='line'>                <span class="s1">&#39;title&#39;</span> <span class="o">=&gt;</span> <span class="nv">$instance</span><span class="p">[</span><span class="s1">&#39;label&#39;</span><span class="p">],</span>
</span><span class='line'>                <span class="s1">&#39;weight&#39;</span> <span class="o">=&gt;</span> <span class="nv">$instance</span><span class="p">[</span><span class="s1">&#39;widget&#39;</span><span class="p">][</span><span class="s1">&#39;weight&#39;</span><span class="p">],</span>
</span><span class='line'>                <span class="s1">&#39;type&#39;</span> <span class="o">=&gt;</span> <span class="nv">$field_map</span><span class="p">[</span><span class="nv">$instance</span><span class="p">[</span><span class="s1">&#39;field_name&#39;</span><span class="p">]][</span><span class="s1">&#39;type&#39;</span><span class="p">],</span>
</span><span class='line'>              <span class="p">);</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>            <span class="c1">// Non-field elements. ex. title</span>
</span><span class='line'>            <span class="k">foreach</span> <span class="p">(</span><span class="nv">$extra_fields</span> <span class="k">as</span> <span class="nv">$name</span> <span class="o">=&gt;</span> <span class="nv">$extra_field</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>              <span class="nv">$fields</span><span class="p">[</span><span class="nv">$name</span><span class="p">]</span> <span class="o">=</span> <span class="k">array</span><span class="p">(</span>
</span><span class='line'>                <span class="s1">&#39;title&#39;</span> <span class="o">=&gt;</span> <span class="nv">$extra_field</span><span class="p">[</span><span class="s1">&#39;label&#39;</span><span class="p">],</span>
</span><span class='line'>                <span class="s1">&#39;weight&#39;</span> <span class="o">=&gt;</span> <span class="nv">$extra_field</span><span class="p">[</span><span class="s1">&#39;weight&#39;</span><span class="p">],</span>
</span><span class='line'>              <span class="p">);</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>            <span class="k">return</span> <span class="nv">$fields</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Drupal Development Resources]]></title>
    <link href="http://j2hongming.github.io/blog/2016/03/31/drupal-development-resources/"/>
    <updated>2016-03-31T11:39:48+08:00</updated>
    <id>http://j2hongming.github.io/blog/2016/03/31/drupal-development-resources</id>
    <content type="html"><![CDATA[<ul>
<li>Concepts</li>
<li>Tools</li>
<li>Nice Modules and API</li>
<li>Code Snippet</li>
</ul>


<!-- more -->


<h2>Concepts</h2>

<p><a href="https://www.drupal.org/documentation/develop">Develop for Drupal</a></p>

<h2>Tools</h2>

<p><a href="https://www.drupal.org/node/147789">Development tools</a></p>

<h2>Nice Modules and API</h2>

<ul>
<li>Form Handling</li>
<li>Cron Jobs</li>
<li>Batch Processing</li>
<li>Send Mail</li>
</ul>


<h3>Form Handling</h3>

<p><a href="https://api.drupal.org/api/drupal/developer!topics!forms_api_reference.html/7">Durpal Form API</a></p>

<h3>Cron Jobs</h3>

<p><a href="https://www.drupal.org/project/elysia_cron">Elysia Cron</a></p>

<h3>Batch Processing</h3>

<p><a href="http://j2hongming.github.io/blog/2016/03/28/batch-api-notes/">Batch API</a></p>

<h3>Send Mail</h3>

<p><a href="https://www.drupal.org/project/smtp">SMTP Authentication Support</a></p>

<h2>Code Snippet</h2>

<ul>
<li>Entity</li>
<li>Node</li>
<li>Taxonomy</li>
<li>Comment</li>
<li>Field</li>
<li>Field Collection</li>
<li>Block</li>
<li>Theme</li>
<li>Form</li>
<li>Database</li>
<li>Mail</li>
<li>Batch/Oueue</li>
<li>Cron</li>
<li>Cache</li>
<li>Misc.</li>
</ul>


<h3>Entity</h3>

<ul>
<li><a href="https://www.drupal.org/node/1427962">Better examples for entity_metadata_wrapper()</a></li>
<li><a href="http://dropbucket.org/node/1563">Various EntityMetadataWrapper Examples</a></li>
</ul>


<h3>Node</h3>

<ul>
<li><a href="https://anders.unix.se/2011/04/13/guide-to-programmatic-node-creation-in-drupal-7/">Guide to programmatic node creation in Drupal 7</a></li>
<li><a href="https://www.urbaninsight.com/2011/10/24/saving-nodes-fields-without-saving-node-itself">Saving node&rsquo;s fields without saving the node itself</a></li>
</ul>


<h3>Taxonomy</h3>

<ul>
<li><a href="http://www.lightrains.com/blog/programmatically-create-taxonomy-term-drupal">How to programmatically create a taxonomy term in drupal</a></li>
</ul>


<h3>Comment</h3>

<ul>
<li><a href="https://www.drupal.org/node/1030676">How to create comments programmatically in Drupal 7</a></li>
</ul>


<h3>Field</h3>

<ul>
<li><a href="http://j2hongming.github.io/blog/2016/03/31/get-field-names-of-content-type-in-drupal/">Get Field Names of Content Type in Drupal</a></li>
</ul>


<h3>Field Collection</h3>

<ul>
<li><a href="http://audiblecode.com/blog/programmatically-create-and-update-field-collection-item-node-entity-api">Programmatically create and update field collection item for the node with entity API</a></li>
<li><a href="http://cornel.co/article/delete-node-field-collection-items-drupal-7">Delete a node field collection items in Drupal 7</a></li>
<li><a href="http://rapiddg.com/blog/programmatically-adding-field-collection-item-node-drupal">Programmatically Adding a Field Collection Item to a Node in Drupal</a></li>
</ul>


<h3>Block</h3>

<ul>
<li><a href="http://stackoverflow.com/questions/4731420/how-to-insert-a-block-into-a-node-or-template-in-drupal-7">How to insert a block into a node or template in Drupal 7? - Stack Overflow</a></li>
</ul>


<h3>Theme</h3>

<ul>
<li><a href="https://www.drupal.org/node/930760">Render Arrays in Drupal 7</a></li>
<li><a href="https://api.drupal.org/api/drupal/modules%21system%21system.api.php/function/hook_theme/7">hook_theme</a></li>
<li><a href="http://stackoverflow.com/questions/7742203/how-does-hook-theme-work">How does hook_theme() work?</a></li>
<li><a href="https://www.drupal.org/node/933976">Using the theme layer (Drupal 7.x)</a></li>
</ul>


<h3>Form</h3>

<ul>
<li><a href="http://webemania.com/blog/how-to-add-classes-or-attributes-to-drupal-form-elements">How to add classes or attributes to Drupal form elements</a></li>
<li><a href="http://befused.com/drupal/form-validation">http://befused.com/drupal/form-validation</a></li>
</ul>


<h3>Database</h3>

<h3>Mail</h3>

<h3>Batch/Queue</h3>

<h3>Cron</h3>

<h3>Cache</h3>

<ul>
<li><a href="http://www.workhabit.com/blog/using-drupal-cache-your-custom-module-better-performance">Using Drupal Cache In Your Custom Module For Better Performance</a></li>
</ul>


<h3>Misc.</h3>

<ul>
<li><a href="http://befused.com/drupal/print_r-in-drupal_set_message">print_r in drupal_set_message</a></li>
<li><a href="https://www.drupal.org/node/834074">multiple wildcards in hook_menu on same place</a></li>
<li><a href="https://www.drupal.org/node/756722">Managing JavaScript in Drupal 7</a></li>
<li><a href="http://drupal.stackexchange.com/questions/29210/how-do-i-add-javascript-specific-for-a-view">How do I add JavaScript specific for a view?</a></li>
<li><a href="https://www.drupal.org/writing-secure-code">Writing secure code</a></li>
<li><a href="http://www.tekritisoftware.com/restful-web-services-drupal-eight">Accepting POST in Drupal: Customizing RESTful Endpoints</a></li>
<li><a href="http://www.timtoon.com/2009/05/27/customizing-an-rss-feed-using-drupal-and-views/">Customizing an RSS feed using Drupal and Views</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Batch API Notes]]></title>
    <link href="http://j2hongming.github.io/blog/2016/03/28/batch-api-notes/"/>
    <updated>2016-03-28T14:41:34+08:00</updated>
    <id>http://j2hongming.github.io/blog/2016/03/28/batch-api-notes</id>
    <content type="html"><![CDATA[<ul>
<li>設定operations</li>
<li>設定batch資訊</li>
<li>設定finish callback function</li>
<li>線上展示</li>
<li>其他批次處理可用模組</li>
</ul>


<!-- more -->


<blockquote><p>Batch sets are used to spread processing (primarily, but not exclusively, forms processing) over several page requests. This helps to ensure that the processing is not interrupted due to PHP timeouts, while users are still able to receive feedback on the progress of the ongoing operations.
<a href="https://api.drupal.org/api/drupal/includes%21form.inc/group/batch/7">Batch operations</a></p></blockquote>

<h2>設定operations</h2>

<p>可依照需求切割一個operation內做的事，假設1000個node，可以一個operation處理一個node或一個operation處理多個node。Client端利用ajax對<a href="https://sitename/batch?id=">https://sitename/batch?id=</a>[batch_id]&amp;op=do發出HttpRequest。</p>

<pre><code>// 假設$data是從EXCEL中讀出的資料

$split_rows = array_chunk($data, 50);

foreach ($split_rows as $key =&gt; $rows) {
  $operations[] = array(
    'import_batch_processing',  // The function to run on 50 row in one operation
    array($rows),  // The rows in the Excel
  );
}
</code></pre>

<h2>設定batch資訊</h2>

<pre><code>$batch = array(
  'title' =&gt; t('批次處理中...'),
  'operations' =&gt; $operations,  // Runs all of the queued processes from the while loop above.
  'file' =&gt; drupal_get_path('module', 'module_name_which_you_create') . '/import_batch_processing.inc',
  'finished' =&gt; 'import_batch_processing_finished', // Function to run when the import is successful
'error_message' =&gt; t('The installation has encountered an error.'),
'progress_message' =&gt; t('資料匯入中...'),
);
</code></pre>

<ul>
<li><code>file</code>: 若import_batch_processing和import_batch_processing_finished沒有定義在.module檔內，需設定有定義這兩個callback function的file。<a href="http://data.agaric.com/batch-api-process-silently-fails-if-function-file-not-default-drupal-bootstrap-isnt-explicitly-inclu">Batch API process silently fails</a></li>
<li><code>finished</code>: batch結束後須執行的callback function</li>
<li><code>error_message</code>:batch過程中若發生錯誤的回傳訊息</li>
<li><code>progress_message</code>: batch過程中顯示的訊息</li>
</ul>


<h2>設定finish callback function</h2>

<pre><code>function import_batch_processing_finished( $success, $results, $operations ){
if($success){
  ...
}
else {
  // An error occurred.
  // $operations contains the operations that remained unprocessed.
  $error_operation = reset($operations);
  drupal_set_message(
    t('An error occurred while processing @operation with arguments : @args',
      array(
        '@operation' =&gt; $error_operation[0],
        '@args' =&gt; print_r($error_operation[0], TRUE),
      )
    )
  );
}
</code></pre>

<h2>線上展示</h2>

<ol>
<li><a href="https://simplytest.me/">Evaluate Drupal projects online</a></li>
<li>安裝模組 Examples for Developers</li>
<li>登入admin帳號後，開啟模組Devel generate和Batch example</li>
<li>前往路徑 admin/config/development/generate/content，新增1000個測試Node</li>
<li>前往路徑 examples/batch_example，開始測試</li>
</ol>


<blockquote><p>可配合程式碼觀察
<a href="http://cgit.drupalcode.org/examples/tree/batch_example/batch_example.module?id=refs/heads;id2=7.x-1.x">Batch example source code</a></p></blockquote>

<h2>其他批次處理可用模組</h2>

<ul>
<li><a href="https://www.drupal.org/project/views_data_export">Views Data Export</a></li>
<li><a href="https://www.drupal.org/project/node_export">Node export</a></li>
</ul>


<h2>Ref.</h2>

<ul>
<li><a href="https://api.drupal.org/api/drupal/includes%21form.inc/group/batch/7">Batch operations</a></li>
<li><a href="https://www.drupal.org/node/180528">how to use the Batch API</a></li>
<li><a href="http://www.jeffgeerling.com/blogs/jeff-geerling/using-batch-api-build-huge-csv">Using Batch API to build huge CSV files for custom exports</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to Access Data in Drupal 7]]></title>
    <link href="http://j2hongming.github.io/blog/2016/03/28/how-to-access-data-in-drupal-7/"/>
    <updated>2016-03-28T10:05:52+08:00</updated>
    <id>http://j2hongming.github.io/blog/2016/03/28/how-to-access-data-in-drupal-7</id>
    <content type="html"><![CDATA[<ul>
<li>Basic API</li>
<li>Database API

<ul>
<li>Dynamic Query</li>
<li>Static Query</li>
<li>Show Query String and Arguments</li>
</ul>
</li>
<li>EntityFieldQuery</li>
</ul>


<!-- more  -->


<h2>Basic API</h2>

<pre><code>node_load, user_load, taxonomy_term_load, comment_load
主要帶入參數為node id, user_id, term id, comment id
</code></pre>

<h2>Database API</h2>

<h3>Dynamic Query</h3>

<h4>db_select</h4>

<pre><code>$query = db_select('node', 'n');
// access node table, alias is n
</code></pre>

<h4>codition</h4>

<pre><code>$query-&gt;condition($field, $value = NULL, $operator = '=')
// 基本型態

$query-&gt;condition('node.type', array('node_type_name'),'IN');
// 使用In

$query-&gt;condition('node.title',  '%'.db_like($key_word).'%', 'LIKE');
// 使用Like

$query-&gt;where('now() &gt;  TIMESTAMPADD( DAY , 9, FROM_UNIXTIME( field_data_field_timefield.field_timefield_value  ) )');
// 使用where而非condition的寫法

$or = db_or();
$or-&gt;condition('node.title','%'.db_like($key_word).'%', 'LIKE');
$or-&gt;condition('comment.subject','%'.db_like($key_word).'%', 'LIKE');
$query-&gt;condition($or);
// 使用OR連接過濾條件
</code></pre>

<h4>fields, addField</h4>

<p>差別在於是否要使用欄位別名和一次可以存取的欄位數量
    $query->fields(&lsquo;node&rsquo;, array(&lsquo;nid&rsquo;, &lsquo;title&rsquo;));
    // 一次存取多個欄位但無法使用欄位別名</p>

<pre><code>$query-&gt;addField('node','title','node_title');
// 一次存取一個欄位，可以使用欄位別名
</code></pre>

<h4>addExpression</h4>

<pre><code>$query-&gt;addExpression('IFNULL(count1, 0)+IFNULL(count2, 0)','total_count');

$query-&gt;addExpression('SUM(clickCount)', 'total_count');
</code></pre>

<h4>join</h4>

<p>預設join的型態為inner join, 有提供<code>join()</code>, <code>innerJoin()</code>, <code>leftJoin()</code>, or <code>rightJoin()</code>的方法</p>

<pre><code>$query = db_select('node', 'n');
$table_alias = $query-&gt;join('users', 'u', 'n.uid = u.uid AND u.uid = :uid');
// node table join user talbe on uid
</code></pre>

<h4>SubQuery</h4>

<pre><code>$subquery_customlog = db_select('customlog', 'clg')-&gt;fields('clg', array('nid'));
$subquery_customlog-&gt;addExpression('COUNT(*)', 'count');
$subquery_customlog-&gt;groupBy('clg.nid');
$query = db_select('node','n')-&gt;fields('n', array('nid','title'));
$query-&gt;leftJoin( $subquery_customlog, 'c_count' ,'c_count.nid = n.nid');
...
// 自行產生所需的table後, 再Join到另一個table
</code></pre>

<h4>Extender</h4>

<p>tablesort和pager</p>

<pre><code>$query-&gt;extend('TableSort')
      -&gt;orderByHeader($header);
// Sorting Extender, 依照表格的Header排序

$query-&gt;extend('PagerDefault')
      -&gt;limit(10);
// Pager Extender
</code></pre>

<h3>Static Query</h3>

<pre><code>$result = db_query("SELECT nid, title FROM {node} WHERE type = :type", array( ':type' =&gt; 'page',));
</code></pre>

<h3>Show Query String and Arguments</h3>

<p>顯示Drupal產生的SQL子句和參數</p>

<pre><code>echo $query-&gt;__toString() . "\n";
// Get query string
$args = $query-&gt;getArguments();
var_dump($args);
// Get the arguments passed to the string
</code></pre>

<h2>EntityFieldQuery</h2>

<p>取得Entity相關的資料, 在Drupal中Entity指的是node, user, taxonomy term, comment&hellip;等。回傳值是和entity相關的ID值，必須另外使用entity_load讀取entity其他資料。</p>

<p>和Basic API相比，優勢在於能使用較複雜的過濾條件得到想要的entity資料；和Database API相比，優勢在於直接以entity觀點看資料，直覺性較強，有一個小缺點是EntityFieldQuery若要同時取得兩個entity的資訊，很難使用join的概念處理。</p>

<pre><code>$query = new EntityFieldQuery();

$query-&gt;entityCondition('entity_type', 'node')
      -&gt;entityCondition('bundle', 'article')
      -&gt;propertyCondition('status', NODE_PUBLISHED)
      -&gt;fieldCondition('field_news_types', 'value', 'spotlight', '=')
      -&gt;fieldCondition('field_news_publishdate', 'value', $year . '%', 'like')-&gt;fieldCondition('field_news_publishdate', 'value', $year . '%', 'like')
      -&gt;fieldOrderBy('field_photo', 'fid', 'DESC')
      -&gt;range(0, 10);

$result = $query-&gt;execute();

if (isset($result['node'])) {
  $news_items_nids = array_keys($result['node']);
  $news_items = entity_load('node', $news_items_nids);
}
</code></pre>

<h2>Ref.</h2>

<ul>
<li><a href="https://api.drupal.org/api/drupal/modules%21node%21node.module/function/node_load/7">node_load</a></li>
<li><a href="https://api.drupal.org/api/drupal/modules%21user%21user.module/function/user_load/7">user_load</a></li>
<li><a href="https://api.drupal.org/api/drupal/modules%21taxonomy%21taxonomy.module/function/taxonomy_term_load/7">taxonomy_term_load</a></li>
<li><a href="https://api.drupal.org/api/drupal/modules%21comment%21comment.module/function/comment_load/7">comment_load</a></li>
<li><a href="https://www.drupal.org/dynamic-queries">Dynamic queries</a></li>
<li><a href="https://www.drupal.org/node/310072">Static queries</a></li>
<li><a href="https://www.drupal.org/node/1343708">How to use EntityFieldQuery</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Config Static IP in Ubuntu]]></title>
    <link href="http://j2hongming.github.io/blog/2016/03/02/config-static-ip-in-ubuntu/"/>
    <updated>2016-03-02T16:48:33+08:00</updated>
    <id>http://j2hongming.github.io/blog/2016/03/02/config-static-ip-in-ubuntu</id>
    <content type="html"><![CDATA[<ul>
<li>設定network interface</li>
<li>重新讀取網路設定</li>
</ul>


<!-- more -->


<h2>設定network interface</h2>

<pre><code>$ vim /etc/network/interfaces
# 加上下面IP設定(address, netmask, gateway要看當時環境而定)
iface eth0 inet static
address 192.168.7.151
netmask 255.255.255.0
gateway 192.168.7.1
</code></pre>

<h2>重新讀取網路設定</h2>

<pre><code>$ sudo /etc/init.d/networking restart
</code></pre>

<ul>
<li><a href="http://note.drx.tw/2008/02/ubuntu-ip.html">凍仁的筆記: Ubuntu 網路設定 - 固定 IP</a></li>
<li><a href="http://www.arthurtoday.com/2010/08/ubuntu-ip.html">Ubuntu 如何設定固定 IP ( 設定網路 )</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Check Hardware Information in Ubuntu]]></title>
    <link href="http://j2hongming.github.io/blog/2016/03/02/check-hardware-information-in-ubuntu/"/>
    <updated>2016-03-02T16:17:19+08:00</updated>
    <id>http://j2hongming.github.io/blog/2016/03/02/check-hardware-information-in-ubuntu</id>
    <content type="html"><![CDATA[<ul>
<li>CPU</li>
<li>RAM</li>
<li>HD</li>
<li>MAC Adress</li>
</ul>


<!-- more -->


<h2>CPU</h2>

<pre><code>lscpu
# Architecture:          x86_64
# CPU op-mode(s):        32-bit, 64-bit
# Byte Order:            Little Endian
# ...

cat /proc/cpuinfo
# processor       : 0
# vendor_id       : GenuineIntel
# cpu family      : 6
# model           : 37
# model name      : Intel(R) Xeon(R) CPU E5-2670 0 @ 2.60GHz
# ...
</code></pre>

<ul>
<li><a href="http://www.binarytides.com/linux-cpu-information/">8 commands to check cpu information on Linux</a></li>
<li><a href="http://www.cyberciti.biz/faq/ubuntu-cpu-information/">Ubuntu: Find CPU Information / Speed</a></li>
<li><a href="http://www.binarytides.com/linux-check-processor/">How to check processor and cpu details on Linux</a></li>
</ul>


<h2>RAM</h2>

<h3>可用記憶體大小</h3>

<pre><code>free -m
</code></pre>

<h3>詳細資料</h3>

<pre><code>cat /proc/meminfo
</code></pre>

<h3>時脈和DDR</h3>

<pre><code>sudo dmidecode --type 17
</code></pre>

<ul>
<li><a href="http://www.cyberciti.biz/faq/check-ram-in-ubuntu/">HowTo: Check RAM Size In Ubuntu Linux</a></li>
<li><a href="http://www.cyberciti.biz/faq/linux-ram-info-command/">Find Linux RAM Information Command</a></li>
</ul>


<h2>Hard Drive</h2>

<h3>Check Partitions</h3>

<pre><code>fdisk -l

df
</code></pre>

<h3>Lists out all the storage blocks</h3>

<pre><code>lsblk

hwinfo
</code></pre>

<h3>Other</h3>

<pre><code>ls /dev/disk/by-id

cat /sys/block/sda/device/model
</code></pre>

<ul>
<li><a href="http://www.linuxjournal.com/content/tech-tip-retrieve-disk-info-command-line">Tech Tip: Retrieve Disk Info from the Command Line | Linux Journal</a></li>
<li><a href="http://www.binarytides.com/linux-command-check-disk-partitions/">9 commands to check hard disk partitions and disk space on Linux</a></li>
</ul>


<h2>MAC Adress</h2>

<pre><code>ifconfig -a
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Notes for Vim]]></title>
    <link href="http://j2hongming.github.io/blog/2016/02/19/notes-for-vim/"/>
    <updated>2016-02-19T11:28:15+08:00</updated>
    <id>http://j2hongming.github.io/blog/2016/02/19/notes-for-vim</id>
    <content type="html"><![CDATA[<ul>
<li>概念Concept</li>
<li>基本Basic</li>
<li>組合技Combo</li>
</ul>


<!--more-->


<h2>概念Concept</h2>

<ul>
<li>模式</li>
<li>單檔案</li>
<li>單行</li>
<li>單詞</li>
<li>單檔案</li>
</ul>


<h3>模式</h3>

<p>Command Line mode, Normal mode, Insert mode, 預設在Normal mode</p>

<p>Nm to Im: <code>i</code></p>

<p>Nm to CLm:<code>:</code></p>

<p>Im to Nm:<code>esc</code></p>

<h2>基本Basic</h2>

<h3>存檔</h3>

<h4>CL mode</h4>

<pre><code>w #存檔
q #離開
wq #存檔並離開
q! #不存檔強制離開
</code></pre>

<h3>瞬間移動</h3>

<h4>N mode</h4>

<h5>搜尋</h5>

<pre><code>/ #搜尋
n #下一個符合
N #上一個符合
</code></pre>

<h5>檔案觀點</h5>

<pre><code>gg #檔頭
G #檔尾
j5 #往下移動5行, 5可改為任意數字
</code></pre>

<h5>行觀點</h5>

<pre><code>0 #行內移動: 行首
^ #行內移動: 行首
$ #行內移動: 行尾
f #行內字元搜尋: 往後
F #行內字元搜尋: 往前
</code></pre>

<h5>詞觀點</h5>

<pre><code>w #單詞移動: 下一單詞之詞頭
e #單詞移動: 下一單詞之詞尾
b #單詞移動: 上一單詞之詞頭
</code></pre>

<h4>CL mode</h4>

<pre><code>0 #檔頭
$ #檔尾
n #跳到第n行
</code></pre>

<h3>標記與複製</h3>

<h4>N mode</h4>

<pre><code>v #選取
V #標記行
Ctrl + v #標記區塊
y #複製標記內容
yy #複製游標行
p #在下一行貼上複製或刪除的內容
P #在上一行貼上複製或刪除的內容
</code></pre>

<h3>刪除與復原</h3>

<h4>N mode</h4>

<pre><code>dd #刪除一行
D #刪除至行尾
u #復原
Ctrl + r #重做
</code></pre>

<h2>組合技Combo</h2>

<h3>N mode</h3>

<h4>CP大法</h4>

<pre><code>yy p #複製單行貼上
</code></pre>

<h4>快速刪除</h4>

<pre><code>d f 字元 #刪除當時游標所在到到該字元前
</code></pre>

<h2>參考資源</h2>

<ul>
<li><a href="http://www.slideshare.net/BruceLi2/008-vim">vim超基礎入門</a></li>
<li><a href="http://blog.eddie.com.tw/2012/04/27/screencast-1-learning-vim-from-the-beginning/">爽爽快快學Vim(1)</a></li>
<li><a href="http://blog.vgod.tw/2009/12/08/vim-cheat-sheet-for-programmers/">給程式設計師的Vim入門圖解說明</a></li>
<li><a href="http://blog.linux.org.tw/~jserv/archives/001675.html">vi / vim 圖解鍵盤指令</a></li>
<li><a href="http://www.slideshare.net/taichunmin/ss-16096723">寫程式？那些老師沒教的事</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Github Pages With Octopress]]></title>
    <link href="http://j2hongming.github.io/blog/2016/02/18/github-pages-with-octopress/"/>
    <updated>2016-02-18T17:29:01+08:00</updated>
    <id>http://j2hongming.github.io/blog/2016/02/18/github-pages-with-octopress</id>
    <content type="html"><![CDATA[<ul>
<li>建置Octopress</li>
<li>設定佈署到 github</li>
<li>網站設定</li>
<li>內容管理</li>
</ul>


<!-- more -->


<h2>建置Octopress</h2>

<h2>設定佈署到 github</h2>

<pre><code>rake setup_github_pages
</code></pre>

<p>輸入自己的Github Pages repository url
git@github.com:your_username/your_username.github.io.git</p>

<h2>網站設定</h2>

<p><a href="http://octopress.org/docs/configuring/">Configuring Octopress</a></p>

<h2>內容管理</h2>

<p>Octopress的網頁內容是使用<a href="http://markdown.tw/">Markdown語法</a>
Blog的文章會被存放在source/_posts, 以Jekyll&rsquo;s naming conventions:YYYY-MM-DD-post-title.markdown來命名</p>

<h3>如何在Octopress分享程式碼</h3>

<h4>markdown方法</h4>

<pre><code>若為區塊程式碼, 使用4個空白或1個tab
若為行內程式碼, 使用反引號 `
</code></pre>

<h4>octopress方法</h4>

<p><a href="http://octopress.org/docs/blogging/code/">Sharing Code Snippets in Octopress</a></p>

<h3>常用指令</h3>

<p>建立新文章</p>

<pre><code>rake new_post["標題"]
#保存在 source/_posts/日期-標題.markdown
</code></pre>

<p>建立新頁面</p>

<pre><code>rake new_page[super-awesome]
#creates /source/super-awesome/index.markdown
#保存在anywhere in your blog source directory

rake new_page[super-awesome/page.html]
# creates /source/super-awesome/page.html 
</code></pre>

<p>產生網站檔案</p>

<pre><code>rake generate
# Generates posts and pages into the public directory
</code></pre>

<p>發佈到 GitHub</p>

<pre><code>rake deploy
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Drupal 7 + Memcached on CentOS 6]]></title>
    <link href="http://j2hongming.github.io/blog/2015/07/24/drupal-7-plus-memcached-on-centos-6/"/>
    <updated>2015-07-24T17:24:34+08:00</updated>
    <id>http://j2hongming.github.io/blog/2015/07/24/drupal-7-plus-memcached-on-centos-6</id>
    <content type="html"><![CDATA[<ul>
<li>安裝Memcached</li>
<li>設定Memcached</li>
<li>安裝Memcached PHP extension(PECL Memcache)</li>
<li>設定Memcached PHP extension</li>
<li>安裝Drupal 7 memcache 模組</li>
<li>設定Drupal 7 setting.php</li>
<li>注意事項</li>
</ul>


<!-- more -->


<h2>Memcached</h2>

<h3>安裝Memcached</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>yum install memcached</span></code></pre></td></tr></table></div></figure>


<h3>設定Memcached</h3>

<p>設定 /etc/sysconfig/memcached
注意OPTIONS=&ldquo;-l 127.0.0.1&rdquo;</p>

<h2>Memcached PHP extension</h2>

<h3>安裝Memcached PHP extension</h3>

<p>指定版本</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo pecl install channel://pecl.php.net/memcache-3.0.6</span></code></pre></td></tr></table></div></figure>


<h3>設定Memcached PHP extension</h3>

<p>設定/etc/php.d/memcache.ini</p>

<p>開啟hash相關設定</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>memcache.hash\_strategy=consistent</span></code></pre></td></tr></table></div></figure>


<h2>Drupal 7</h2>

<h3>安裝Drupal 7 memcache 模組</h3>

<p><a href="https://www.drupal.org/project/memcache">Memcache API and Integration</a></p>

<h3>設定Drupal 7 setting.php</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$conf['cache_backends'][] = 'sites/all/modules/memcache/memcache.inc';
</span><span class='line'>// The 'cache_form' bin must be assigned no non-volatile storage.
</span><span class='line'>$conf['cache_class_cache_form'] = 'DrupalDatabaseCache';
</span><span class='line'>$conf['cache_default_class'] = 'MemCacheDrupal';
</span><span class='line'>$conf['memcache_key_prefix'] = 'something_unique';
</span><span class='line'>// Don't bootstrap the database when serving pages from the cache.
</span><span class='line'>$conf['page_cache_without_database'] = TRUE;
</span><span class='line'>$conf['page_cache_invoke_hooks'] = FALSE;
</span><span class='line'>
</span><span class='line'>$conf['memcache_stampede_protection'] = TRUE;
</span><span class='line'>$conf['lock_inc'] = 'sites/all/modules/memcache/memcache-lock.inc';</span></code></pre></td></tr></table></div></figure>


<h2>注意事項</h2>

<ol>
<li>若memcache service有起來，Druapl卻沒連到，注意防火牆設定</li>
</ol>


<h2>Ref</h2>

<ul>
<li><a href="https://www.drupal.org/node/1131468">Drupal 7 Memcache Tutorial</a>
大致流程說明</li>
<li><a href="http://tag1consulting.com/blog/memcache-centos-fedora">Memcached and PECL memcache on CentOS and Fedora</a>
CentOS安裝注意事項</li>
<li><a href="http://www.tecmint.com/install-memcached-caching-server-on-rhel-centos-fedora/">Install Memcached (Caching Server) on RHEL/CentOS 6.3/5.8 and Fedora 17-12</a>
安裝流程與指令(推薦)</li>
<li><a href="http://chimera.labs.oreilly.com/books/1230000000845/ch16.html">Chapter 16. Alternative Storage and Cache Backends</a>
觀念</li>
<li><a href="http://www.hellosanta.com.tw/Drupal%E7%B6%B2%E7%AB%99%E8%A8%AD%E8%A8%88/drupal-memcached">Drupal Memcached中文教學</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
