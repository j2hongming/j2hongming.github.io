<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Drupal7 | J2hongming Blog]]></title>
  <link href="http://j2hongming.github.io/blog/categories/drupal7/atom.xml" rel="self"/>
  <link href="http://j2hongming.github.io/"/>
  <updated>2016-12-28T01:14:11+08:00</updated>
  <id>http://j2hongming.github.io/</id>
  <author>
    <name><![CDATA[HongMing ChangChine]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[客製化Drupal原生下拉式選單]]></title>
    <link href="http://j2hongming.github.io/blog/2016/06/16/customize-drupal-origin-selectlist/"/>
    <updated>2016-06-16T23:20:31+08:00</updated>
    <id>http://j2hongming.github.io/blog/2016/06/16/customize-drupal-origin-selectlist</id>
    <content type="html"><![CDATA[<p><div><script src='https://gist.github.com/f4fe361e7f0c3f83e796b006b8f4cbeb.js'></script>
<noscript><pre><code>/**
 * origin selectlist display:
 * A
 * B
 * C
 * -----
 * customized selectlist display:
 * 100 A
 * 200 B
 * 300 C
 */
function hook_field_widget_form_alter(&amp;$element, &amp;$form_state, $context){

  if($element['#bundle'] == 'article' &amp;&amp; $element['#field_name'] == 'field_code_name'){
    $new_code_name = array();
    foreach ($element['#options'] as $key =&gt; $value) {
      $term_obj = taxonomy_term_load($key);
      $new_code_name[$key] = $term_obj-&gt;field_code_id['und'][0]['safe_value'].' '.$value;
    }
    
    $element['#options'] = $new_code_name;
  }
}</code></pre></noscript></div>
</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Get Field Names of Content Type in Drupal]]></title>
    <link href="http://j2hongming.github.io/blog/2016/03/31/get-field-names-of-content-type-in-drupal/"/>
    <updated>2016-03-31T13:30:28+08:00</updated>
    <id>http://j2hongming.github.io/blog/2016/03/31/get-field-names-of-content-type-in-drupal</id>
    <content type="html"><![CDATA[<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="o">&lt;/</span><span class="nx">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;/&lt;</span><span class="nx">em</span><span class="o">&gt;*</span>
</span><span class='line'><span class="o">*</span> <span class="nx">取得ContentType的field</span> <span class="nx">name</span>
</span><span class='line'><span class="o">*</span> <span class="o">@</span><span class="nx">see</span>
</span><span class='line'><span class="o">*</span> <span class="o">@</span><span class="nb">link</span> <span class="o">&lt;</span><span class="nx">a</span> <span class="nx">href</span><span class="o">=</span><span class="s2">&quot;http://drupal.stackexchange.com/questions/39850/get-all-fields-for-a-given-content-type-including-title&quot;</span><span class="o">&gt;</span><span class="nx">http</span><span class="o">://</span><span class="nx">drupal</span><span class="o">.</span><span class="nx">stackexchange</span><span class="o">.</span><span class="nx">com</span><span class="o">/</span><span class="nx">questions</span><span class="o">/</span><span class="mi">39850</span><span class="o">/</span><span class="nx">get</span><span class="o">-</span><span class="nx">all</span><span class="o">-</span><span class="nx">fields</span><span class="o">-</span><span class="k">for</span><span class="o">-</span><span class="nx">a</span><span class="o">-</span><span class="nx">given</span><span class="o">-</span><span class="nx">content</span><span class="o">-</span><span class="nx">type</span><span class="o">-</span><span class="nx">including</span><span class="o">-</span><span class="nx">title</span><span class="o">&lt;/</span><span class="nx">a</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="nx">em</span><span class="o">&gt;/&lt;/</span><span class="nx">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="k">function</span> <span class="nf">modulename_get_field_name</span><span class="p">(</span><span class="nv">$content_type</span><span class="p">){</span><span class="o">&lt;/</span><span class="nx">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span>        <span class="nv">$fields</span> <span class="o">=</span> <span class="k">array</span><span class="p">();</span>
</span><span class='line'>        <span class="nv">$field_map</span> <span class="o">=</span> <span class="nx">field_info_field_map</span><span class="p">();</span>
</span><span class='line'>        <span class="nv">$instances</span> <span class="o">=</span> <span class="nx">field_info_instances</span><span class="p">(</span><span class="s1">&#39;node&#39;</span><span class="p">,</span> <span class="nv">$content_type</span><span class="p">);</span>
</span><span class='line'>        <span class="nv">$extra_fields</span> <span class="o">=</span> <span class="nx">field_info_extra_fields</span><span class="p">(</span><span class="s1">&#39;node&#39;</span><span class="p">,</span> <span class="nv">$content_type</span><span class="p">,</span> <span class="s1">&#39;form&#39;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// Fields.</span>
</span><span class='line'>        <span class="k">foreach</span> <span class="p">(</span><span class="nv">$instances</span> <span class="k">as</span> <span class="nv">$name</span> <span class="o">=&amp;</span><span class="nx">gt</span><span class="p">;</span> <span class="nv">$instance</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="nv">$field</span> <span class="o">=</span> <span class="nx">field_info_field</span><span class="p">(</span><span class="nv">$instance</span><span class="p">[</span><span class="s1">&#39;field_name&#39;</span><span class="p">]);</span>
</span><span class='line'>          <span class="nv">$fields</span><span class="p">[</span><span class="nv">$instance</span><span class="p">[</span><span class="s1">&#39;field_name&#39;</span><span class="p">]]</span> <span class="o">=</span> <span class="k">array</span><span class="p">(</span>
</span><span class='line'>            <span class="s1">&#39;field_name&#39;</span> <span class="o">=&amp;</span><span class="nx">gt</span><span class="p">;</span> <span class="nv">$instance</span><span class="p">[</span><span class="s1">&#39;field_name&#39;</span><span class="p">],</span>
</span><span class='line'>            <span class="s1">&#39;title&#39;</span> <span class="o">=&amp;</span><span class="nx">gt</span><span class="p">;</span> <span class="nv">$instance</span><span class="p">[</span><span class="s1">&#39;label&#39;</span><span class="p">],</span>
</span><span class='line'>            <span class="s1">&#39;weight&#39;</span> <span class="o">=&amp;</span><span class="nx">gt</span><span class="p">;</span> <span class="nv">$instance</span><span class="p">[</span><span class="s1">&#39;widget&#39;</span><span class="p">][</span><span class="s1">&#39;weight&#39;</span><span class="p">],</span>
</span><span class='line'>            <span class="s1">&#39;type&#39;</span> <span class="o">=&amp;</span><span class="nx">gt</span><span class="p">;</span> <span class="nv">$field_map</span><span class="p">[</span><span class="nv">$instance</span><span class="p">[</span><span class="s1">&#39;field_name&#39;</span><span class="p">]][</span><span class="s1">&#39;type&#39;</span><span class="p">],</span>
</span><span class='line'>          <span class="p">);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// Non-field elements. ex. title</span>
</span><span class='line'>        <span class="k">foreach</span> <span class="p">(</span><span class="nv">$extra_fields</span> <span class="k">as</span> <span class="nv">$name</span> <span class="o">=&amp;</span><span class="nx">gt</span><span class="p">;</span> <span class="nv">$extra_field</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="nv">$fields</span><span class="p">[</span><span class="nv">$name</span><span class="p">]</span> <span class="o">=</span> <span class="k">array</span><span class="p">(</span>
</span><span class='line'>            <span class="s1">&#39;title&#39;</span> <span class="o">=&amp;</span><span class="nx">gt</span><span class="p">;</span> <span class="nv">$extra_field</span><span class="p">[</span><span class="s1">&#39;label&#39;</span><span class="p">],</span>
</span><span class='line'>            <span class="s1">&#39;weight&#39;</span> <span class="o">=&amp;</span><span class="nx">gt</span><span class="p">;</span> <span class="nv">$extra_field</span><span class="p">[</span><span class="s1">&#39;weight&#39;</span><span class="p">],</span>
</span><span class='line'>          <span class="p">);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">return</span> <span class="nv">$fields</span><span class="p">;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="nx">code</span><span class="o">&gt;&lt;/</span><span class="nx">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="p">}</span><span class="o">&lt;/</span><span class="nx">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Drupal Development Resources]]></title>
    <link href="http://j2hongming.github.io/blog/2016/03/31/drupal-development-resources/"/>
    <updated>2016-03-31T11:39:48+08:00</updated>
    <id>http://j2hongming.github.io/blog/2016/03/31/drupal-development-resources</id>
    <content type="html"><![CDATA[<ul>
<li>Concepts</li>
<li>Tools</li>
<li>Nice Modules and API</li>
<li>Code Snippet</li>
</ul>


<!-- more -->


<h2>Concepts</h2>

<p><a href="https://www.drupal.org/documentation/develop">Develop for Drupal</a></p>

<h2>Tools</h2>

<p><a href="https://www.drupal.org/node/147789">Development tools</a></p>

<h2>Nice Modules and API</h2>

<ul>
<li>Form Handling</li>
<li>Cron Jobs</li>
<li>Batch Processing</li>
<li>Send Mail</li>
</ul>


<h3>Form Handling</h3>

<p><a href="https://api.drupal.org/api/drupal/developer!topics!forms_api_reference.html/7">Durpal Form API</a></p>

<h3>Cron Jobs</h3>

<p><a href="https://www.drupal.org/project/elysia_cron">Elysia Cron</a></p>

<h3>Batch Processing</h3>

<p><a href="/blog/2016/03/28/batch-api-notes/">Batch API</a></p>

<h3>Send Mail</h3>

<p><a href="https://www.drupal.org/project/smtp">SMTP Authentication Support</a></p>

<h2>Code Snippet</h2>

<ul>
<li>Entity</li>
<li>Node</li>
<li>Taxonomy</li>
<li>Comment</li>
<li>Field</li>
<li>Field Collection</li>
<li>Block</li>
<li>Theme</li>
<li>Form</li>
<li>Database</li>
<li>Mail</li>
<li>Batch/Oueue</li>
<li>Cron</li>
<li>Cache</li>
<li>Misc.</li>
</ul>


<h3>Entity</h3>

<ul>
<li><a href="https://www.drupal.org/node/1427962">Better examples for entity_metadata_wrapper()</a></li>
<li><a href="http://dropbucket.org/node/1563">Various EntityMetadataWrapper Examples</a></li>
</ul>


<h3>Node</h3>

<ul>
<li><a href="https://anders.unix.se/2011/04/13/guide-to-programmatic-node-creation-in-drupal-7/">Guide to programmatic node creation in Drupal 7</a></li>
<li><a href="https://www.urbaninsight.com/2011/10/24/saving-nodes-fields-without-saving-node-itself">Saving node&rsquo;s fields without saving the node itself</a></li>
</ul>


<h3>Taxonomy</h3>

<ul>
<li><a href="http://www.lightrains.com/blog/programmatically-create-taxonomy-term-drupal">How to programmatically create a taxonomy term in drupal</a></li>
</ul>


<h3>Comment</h3>

<ul>
<li><a href="https://www.drupal.org/node/1030676">How to create comments programmatically in Drupal 7</a></li>
</ul>


<h3>Field</h3>

<ul>
<li><a href="/blog/2016/03/31/get-field-names-of-content-type-in-drupal/">Get Field Names of Content Type in Drupal</a></li>
</ul>


<h3>Field Collection</h3>

<ul>
<li><a href="http://audiblecode.com/blog/programmatically-create-and-update-field-collection-item-node-entity-api">Programmatically create and update field collection item for the node with entity API</a></li>
<li><a href="http://cornel.co/article/delete-node-field-collection-items-drupal-7">Delete a node field collection items in Drupal 7</a></li>
<li><a href="http://rapiddg.com/blog/programmatically-adding-field-collection-item-node-drupal">Programmatically Adding a Field Collection Item to a Node in Drupal</a></li>
</ul>


<h3>Block</h3>

<ul>
<li><a href="http://stackoverflow.com/questions/4731420/how-to-insert-a-block-into-a-node-or-template-in-drupal-7">How to insert a block into a node or template in Drupal 7? - Stack Overflow</a></li>
</ul>


<h3>Theme</h3>

<ul>
<li><a href="https://www.drupal.org/node/930760">Render Arrays in Drupal 7</a></li>
<li><a href="https://api.drupal.org/api/drupal/modules%21system%21system.api.php/function/hook_theme/7">hook_theme</a></li>
<li><a href="http://stackoverflow.com/questions/7742203/how-does-hook-theme-work">How does hook_theme() work?</a></li>
<li><a href="https://www.drupal.org/node/933976">Using the theme layer (Drupal 7.x)</a></li>
</ul>


<h3>Form</h3>

<ul>
<li><a href="http://webemania.com/blog/how-to-add-classes-or-attributes-to-drupal-form-elements">How to add classes or attributes to Drupal form elements</a></li>
<li><a href="http://befused.com/drupal/form-validation">http://befused.com/drupal/form-validation</a></li>
</ul>


<h3>Database</h3>

<h3>Mail</h3>

<h3>Batch/Queue</h3>

<h3>Cron</h3>

<h3>Cache</h3>

<ul>
<li><a href="http://www.workhabit.com/blog/using-drupal-cache-your-custom-module-better-performance">Using Drupal Cache In Your Custom Module For Better Performance</a></li>
</ul>


<h3>Misc.</h3>

<ul>
<li><a href="http://befused.com/drupal/print_r-in-drupal_set_message">print_r in drupal_set_message</a></li>
<li><a href="https://www.drupal.org/node/834074">multiple wildcards in hook_menu on same place</a></li>
<li><a href="https://www.drupal.org/node/756722">Managing JavaScript in Drupal 7</a></li>
<li><a href="http://drupal.stackexchange.com/questions/29210/how-do-i-add-javascript-specific-for-a-view">How do I add JavaScript specific for a view?</a></li>
<li><a href="https://www.drupal.org/writing-secure-code">Writing secure code</a></li>
<li><a href="http://www.tekritisoftware.com/restful-web-services-drupal-eight">Accepting POST in Drupal: Customizing RESTful Endpoints</a></li>
<li><a href="http://www.timtoon.com/2009/05/27/customizing-an-rss-feed-using-drupal-and-views/">Customizing an RSS feed using Drupal and Views</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Batch API Notes]]></title>
    <link href="http://j2hongming.github.io/blog/2016/03/28/batch-api-notes/"/>
    <updated>2016-03-28T14:41:34+08:00</updated>
    <id>http://j2hongming.github.io/blog/2016/03/28/batch-api-notes</id>
    <content type="html"><![CDATA[<ul>
<li>設定operations</li>
<li>設定batch資訊</li>
<li>設定finish callback function</li>
<li>線上展示</li>
<li>其他批次處理可用模組</li>
</ul>


<!-- more -->


<blockquote><p>Batch sets are used to spread processing (primarily, but not exclusively, forms processing) over several page requests. This helps to ensure that the processing is not interrupted due to PHP timeouts, while users are still able to receive feedback on the progress of the ongoing operations.
<a href="https://api.drupal.org/api/drupal/includes%21form.inc/group/batch/7">Batch operations</a></p></blockquote>

<h2>設定operations</h2>

<p>可依照需求切割一個operation內做的事，假設1000個node，可以一個operation處理一個node或一個operation處理多個node。Client端利用ajax對<a href="https://sitename/batch?id=">https://sitename/batch?id=</a>[batch_id]&amp;op=do發出HttpRequest。</p>

<pre><code>// 假設$data是從EXCEL中讀出的資料

$split_rows = array_chunk($data, 50);

foreach ($split_rows as $key =&gt; $rows) {
  $operations[] = array(
    'import_batch_processing',  // The function to run on 50 row in one operation
    array($rows),  // The rows in the Excel
  );
}
</code></pre>

<h2>設定batch資訊</h2>

<pre><code>$batch = array(
  'title' =&gt; t('批次處理中...'),
  'operations' =&gt; $operations,  // Runs all of the queued processes from the while loop above.
  'file' =&gt; drupal_get_path('module', 'module_name_which_you_create') . '/import_batch_processing.inc',
  'finished' =&gt; 'import_batch_processing_finished', // Function to run when the import is successful
'error_message' =&gt; t('The installation has encountered an error.'),
'progress_message' =&gt; t('資料匯入中...'),
);
</code></pre>

<ul>
<li><code>file</code>: 若import_batch_processing和import_batch_processing_finished沒有定義在.module檔內，需設定有定義這兩個callback function的file。<a href="http://data.agaric.com/batch-api-process-silently-fails-if-function-file-not-default-drupal-bootstrap-isnt-explicitly-inclu">Batch API process silently fails</a></li>
<li><code>finished</code>: batch結束後須執行的callback function</li>
<li><code>error_message</code>:batch過程中若發生錯誤的回傳訊息</li>
<li><code>progress_message</code>: batch過程中顯示的訊息</li>
</ul>


<h2>設定finish callback function</h2>

<pre><code>function import_batch_processing_finished( $success, $results, $operations ){
if($success){
  ...
}
else {
  // An error occurred.
  // $operations contains the operations that remained unprocessed.
  $error_operation = reset($operations);
  drupal_set_message(
    t('An error occurred while processing @operation with arguments : @args',
      array(
        '@operation' =&gt; $error_operation[0],
        '@args' =&gt; print_r($error_operation[0], TRUE),
      )
    )
  );
}
</code></pre>

<h2>線上展示</h2>

<ol>
<li><a href="https://simplytest.me/">Evaluate Drupal projects online</a></li>
<li>安裝模組 Examples for Developers</li>
<li>登入admin帳號後，開啟模組Devel generate和Batch example</li>
<li>前往路徑 admin/config/development/generate/content，新增1000個測試Node</li>
<li>前往路徑 examples/batch_example，開始測試</li>
</ol>


<blockquote><p>可配合程式碼觀察
<a href="http://cgit.drupalcode.org/examples/tree/batch_example/batch_example.module?id=refs/heads;id2=7.x-1.x">Batch example source code</a></p></blockquote>

<h2>其他批次處理可用模組</h2>

<ul>
<li><a href="https://www.drupal.org/project/views_data_export">Views Data Export</a></li>
<li><a href="https://www.drupal.org/project/node_export">Node export</a></li>
</ul>


<h2>Ref.</h2>

<ul>
<li><a href="https://api.drupal.org/api/drupal/includes%21form.inc/group/batch/7">Batch operations</a></li>
<li><a href="https://www.drupal.org/node/180528">how to use the Batch API</a></li>
<li><a href="http://www.jeffgeerling.com/blogs/jeff-geerling/using-batch-api-build-huge-csv">Using Batch API to build huge CSV files for custom exports</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to Access Data in Drupal 7]]></title>
    <link href="http://j2hongming.github.io/blog/2016/03/28/how-to-access-data-in-drupal-7/"/>
    <updated>2016-03-28T10:05:52+08:00</updated>
    <id>http://j2hongming.github.io/blog/2016/03/28/how-to-access-data-in-drupal-7</id>
    <content type="html"><![CDATA[<ul>
<li>Basic API</li>
<li>Database API

<ul>
<li>Dynamic Query</li>
<li>Static Query</li>
<li>Show Query String and Arguments</li>
</ul>
</li>
<li>EntityFieldQuery</li>
</ul>


<!-- more  -->


<h2>Basic API</h2>

<pre><code>node_load, user_load, taxonomy_term_load, comment_load
主要帶入參數為node id, user_id, term id, comment id
</code></pre>

<h2>Database API</h2>

<h3>Dynamic Query</h3>

<h4>db_select</h4>

<pre><code>$query = db_select('node', 'n');
// access node table, alias is n
</code></pre>

<h4>codition</h4>

<pre><code>$query-&gt;condition($field, $value = NULL, $operator = '=')
// 基本型態

$query-&gt;condition('node.type', array('node_type_name'),'IN');
// 使用In

$query-&gt;condition('node.title',  '%'.db_like($key_word).'%', 'LIKE');
// 使用Like

$query-&gt;where('now() &gt;  TIMESTAMPADD( DAY , 9, FROM_UNIXTIME( field_data_field_timefield.field_timefield_value  ) )');
// 使用where而非condition的寫法

$or = db_or();
$or-&gt;condition('node.title','%'.db_like($key_word).'%', 'LIKE');
$or-&gt;condition('comment.subject','%'.db_like($key_word).'%', 'LIKE');
$query-&gt;condition($or);
// 使用OR連接過濾條件
</code></pre>

<h4>fields, addField</h4>

<p>差別在於是否要使用欄位別名和一次可以存取的欄位數量
    $query->fields(&lsquo;node&rsquo;, array(&lsquo;nid&rsquo;, &lsquo;title&rsquo;));
    // 一次存取多個欄位但無法使用欄位別名</p>

<pre><code>$query-&gt;addField('node','title','node_title');
// 一次存取一個欄位，可以使用欄位別名
</code></pre>

<h4>addExpression</h4>

<pre><code>$query-&gt;addExpression('IFNULL(count1, 0)+IFNULL(count2, 0)','total_count');

$query-&gt;addExpression('SUM(clickCount)', 'total_count');
</code></pre>

<h4>join</h4>

<p>預設join的型態為inner join, 有提供<code>join()</code>, <code>innerJoin()</code>, <code>leftJoin()</code>, or <code>rightJoin()</code>的方法</p>

<pre><code>$query = db_select('node', 'n');
$table_alias = $query-&gt;join('users', 'u', 'n.uid = u.uid AND u.uid = :uid');
// node table join user talbe on uid
</code></pre>

<h4>SubQuery</h4>

<pre><code>$subquery_customlog = db_select('customlog', 'clg')-&gt;fields('clg', array('nid'));
$subquery_customlog-&gt;addExpression('COUNT(*)', 'count');
$subquery_customlog-&gt;groupBy('clg.nid');
$query = db_select('node','n')-&gt;fields('n', array('nid','title'));
$query-&gt;leftJoin( $subquery_customlog, 'c_count' ,'c_count.nid = n.nid');
...
// 自行產生所需的table後, 再Join到另一個table
</code></pre>

<h4>Extender</h4>

<p>tablesort和pager</p>

<pre><code>$query-&gt;extend('TableSort')
      -&gt;orderByHeader($header);
// Sorting Extender, 依照表格的Header排序

$query-&gt;extend('PagerDefault')
      -&gt;limit(10);
// Pager Extender
</code></pre>

<h3>Static Query</h3>

<pre><code>$result = db_query("SELECT nid, title FROM {node} WHERE type = :type", array( ':type' =&gt; 'page',));
</code></pre>

<h3>Show Query String and Arguments</h3>

<p>顯示Drupal產生的SQL子句和參數</p>

<pre><code>echo $query-&gt;__toString() . "\n";
// Get query string
$args = $query-&gt;getArguments();
var_dump($args);
// Get the arguments passed to the string
</code></pre>

<h2>EntityFieldQuery</h2>

<p>取得Entity相關的資料, 在Drupal中Entity指的是node, user, taxonomy term, comment&hellip;等。回傳值是和entity相關的ID值，必須另外使用entity_load讀取entity其他資料。</p>

<p>和Basic API相比，優勢在於能使用較複雜的過濾條件得到想要的entity資料；和Database API相比，優勢在於直接以entity觀點看資料，直覺性較強，有一個小缺點是EntityFieldQuery若要同時取得兩個entity的資訊，很難使用join的概念處理。</p>

<pre><code>$query = new EntityFieldQuery();

$query-&gt;entityCondition('entity_type', 'node')
      -&gt;entityCondition('bundle', 'article')
      -&gt;propertyCondition('status', NODE_PUBLISHED)
      -&gt;fieldCondition('field_news_types', 'value', 'spotlight', '=')
      -&gt;fieldCondition('field_news_publishdate', 'value', $year . '%', 'like')-&gt;fieldCondition('field_news_publishdate', 'value', $year . '%', 'like')
      -&gt;fieldOrderBy('field_photo', 'fid', 'DESC')
      -&gt;range(0, 10);

$result = $query-&gt;execute();

if (isset($result['node'])) {
  $news_items_nids = array_keys($result['node']);
  $news_items = entity_load('node', $news_items_nids);
}
</code></pre>

<h2>Ref.</h2>

<ul>
<li><a href="https://api.drupal.org/api/drupal/modules%21node%21node.module/function/node_load/7">node_load</a></li>
<li><a href="https://api.drupal.org/api/drupal/modules%21user%21user.module/function/user_load/7">user_load</a></li>
<li><a href="https://api.drupal.org/api/drupal/modules%21taxonomy%21taxonomy.module/function/taxonomy_term_load/7">taxonomy_term_load</a></li>
<li><a href="https://api.drupal.org/api/drupal/modules%21comment%21comment.module/function/comment_load/7">comment_load</a></li>
<li><a href="https://www.drupal.org/dynamic-queries">Dynamic queries</a></li>
<li><a href="https://www.drupal.org/node/310072">Static queries</a></li>
<li><a href="https://www.drupal.org/node/1343708">How to use EntityFieldQuery</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
